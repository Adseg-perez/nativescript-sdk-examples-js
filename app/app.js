"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var application = require("tns-core-modules/application");
var platformModule = require("tns-core-modules/platform");
var applicationSettingsModule = require("tns-core-modules/application-settings");
var deepLinkDataModule = require("./shared/deep-link-data");
if (platformModule.isIOS) {
    var mydelegate = require("./delegate/my-delegate");
    application.ios.delegate = mydelegate.MyDelegate;
}
function launchExample() {
    var rootView = application.getRootView();
    if (applicationSettingsModule.hasKey("gotoexample")) {
        var value = applicationSettingsModule.getString("gotoexample");
        if (value !== "") {
            applicationSettingsModule.remove("gotoexample");
            rootView.navigate({
                moduleName: value,
                clearHistory: true
            });
        }
    }
}
application.on(application.resumeEvent, function (args) {
    if (args.android) {
        var dld = new deepLinkDataModule.DeepLinkData("", args.android);
        launchExample();
    }
    else if (args.ios) {
        launchExample();
    }
});
application.run({ moduleName: "app-root" });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBS0EsMERBQTREO0FBQzVELDBEQUE0RDtBQUM1RCxpRkFBa0Y7QUFFbEYsSUFBTSxrQkFBa0IsR0FBRyxPQUFPLENBQUMseUJBQXlCLENBQUMsQ0FBQztBQUM5RCxFQUFFLENBQUMsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUN2QixJQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsd0JBQXdCLENBQUMsQ0FBQztJQUNyRCxXQUFXLENBQUMsR0FBRyxDQUFDLFFBQVEsR0FBRyxVQUFVLENBQUMsVUFBVSxDQUFDO0FBQ3JELENBQUM7QUFFRDtJQUNJLElBQU0sUUFBUSxHQUFrQixXQUFXLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDMUQsRUFBRSxDQUFDLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNsRCxJQUFNLEtBQUssR0FBRyx5QkFBeUIsQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDakUsRUFBRSxDQUFDLENBQUMsS0FBSyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDZix5QkFBeUIsQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDaEQsUUFBUSxDQUFDLFFBQVEsQ0FBQztnQkFDZCxVQUFVLEVBQUUsS0FBSztnQkFDakIsWUFBWSxFQUFFLElBQUk7YUFDckIsQ0FBQyxDQUFDO1FBQ1AsQ0FBQztJQUNMLENBQUM7QUFDTCxDQUFDO0FBQ0QsV0FBVyxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUMsV0FBVyxFQUFFLFVBQUMsSUFBSTtJQUN6QyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUNmLElBQU0sR0FBRyxHQUFHLElBQUksa0JBQWtCLENBQUMsWUFBWSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDbEUsYUFBYSxFQUFFLENBQUM7SUFDcEIsQ0FBQztJQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUNsQixhQUFhLEVBQUUsQ0FBQztJQUNwQixDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUM7QUFDSCxXQUFXLENBQUMsR0FBRyxDQUFDLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG5JbiBOYXRpdmVTY3JpcHQsIHRoZSBhcHAuanMgZmlsZSBpcyB0aGUgZW50cnkgcG9pbnQgdG8geW91ciBhcHBsaWNhdGlvbi5cclxuWW91IGNhbiB1c2UgdGhpcyBmaWxlIHRvIHBlcmZvcm0gYXBwLWxldmVsIGluaXRpYWxpemF0aW9uLCBidXQgdGhlIHByaW1hcnlcclxucHVycG9zZSBvZiB0aGUgZmlsZSBpcyB0byBwYXNzIGNvbnRyb2wgdG8gdGhlIGFwcOKAmXMgZmlyc3QgbW9kdWxlLlxyXG4qL1xyXG5pbXBvcnQgKiBhcyBhcHBsaWNhdGlvbiBmcm9tIFwidG5zLWNvcmUtbW9kdWxlcy9hcHBsaWNhdGlvblwiO1xyXG5pbXBvcnQgKiBhcyBwbGF0Zm9ybU1vZHVsZSBmcm9tIFwidG5zLWNvcmUtbW9kdWxlcy9wbGF0Zm9ybVwiO1xyXG5pbXBvcnQgKiBhcyBhcHBsaWNhdGlvblNldHRpbmdzTW9kdWxlIGZyb21cInRucy1jb3JlLW1vZHVsZXMvYXBwbGljYXRpb24tc2V0dGluZ3NcIjtcclxuaW1wb3J0IHtGcmFtZX0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvdWkvZnJhbWVcIjtcclxuY29uc3QgZGVlcExpbmtEYXRhTW9kdWxlID0gcmVxdWlyZShcIi4vc2hhcmVkL2RlZXAtbGluay1kYXRhXCIpO1xyXG5pZiAocGxhdGZvcm1Nb2R1bGUuaXNJT1MpIHtcclxuICAgIGNvbnN0IG15ZGVsZWdhdGUgPSByZXF1aXJlKFwiLi9kZWxlZ2F0ZS9teS1kZWxlZ2F0ZVwiKTtcclxuICAgIGFwcGxpY2F0aW9uLmlvcy5kZWxlZ2F0ZSA9IG15ZGVsZWdhdGUuTXlEZWxlZ2F0ZTtcclxufVxyXG5cclxuZnVuY3Rpb24gbGF1bmNoRXhhbXBsZSgpIHtcclxuICAgIGNvbnN0IHJvb3RWaWV3OiBGcmFtZSA9IDxGcmFtZT4gYXBwbGljYXRpb24uZ2V0Um9vdFZpZXcoKTtcclxuICAgIGlmIChhcHBsaWNhdGlvblNldHRpbmdzTW9kdWxlLmhhc0tleShcImdvdG9leGFtcGxlXCIpKSB7XHJcbiAgICAgICAgY29uc3QgdmFsdWUgPSBhcHBsaWNhdGlvblNldHRpbmdzTW9kdWxlLmdldFN0cmluZyhcImdvdG9leGFtcGxlXCIpO1xyXG4gICAgICAgIGlmICh2YWx1ZSAhPT0gXCJcIikge1xyXG4gICAgICAgICAgICBhcHBsaWNhdGlvblNldHRpbmdzTW9kdWxlLnJlbW92ZShcImdvdG9leGFtcGxlXCIpO1xyXG4gICAgICAgICAgICByb290Vmlldy5uYXZpZ2F0ZSh7XHJcbiAgICAgICAgICAgICAgICBtb2R1bGVOYW1lOiB2YWx1ZSxcclxuICAgICAgICAgICAgICAgIGNsZWFySGlzdG9yeTogdHJ1ZVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuYXBwbGljYXRpb24ub24oYXBwbGljYXRpb24ucmVzdW1lRXZlbnQsIChhcmdzKSA9PiB7XHJcbiAgICBpZiAoYXJncy5hbmRyb2lkKSB7XHJcbiAgICAgICAgY29uc3QgZGxkID0gbmV3IGRlZXBMaW5rRGF0YU1vZHVsZS5EZWVwTGlua0RhdGEoXCJcIiwgYXJncy5hbmRyb2lkKTtcclxuICAgICAgICBsYXVuY2hFeGFtcGxlKCk7XHJcbiAgICB9IGVsc2UgaWYgKGFyZ3MuaW9zKSB7XHJcbiAgICAgICAgbGF1bmNoRXhhbXBsZSgpO1xyXG4gICAgfVxyXG59KTtcclxuYXBwbGljYXRpb24ucnVuKHsgbW9kdWxlTmFtZTogXCJhcHAtcm9vdFwiIH0pO1xyXG5cclxuLypcclxuRG8gbm90IHBsYWNlIGFueSBjb2RlIGFmdGVyIHRoZSBhcHBsaWNhdGlvbiBoYXMgYmVlbiBzdGFydGVkIGFzIGl0IHdpbGwgbm90XHJcbmJlIGV4ZWN1dGVkIG9uIGlPUy5cclxuKi9cclxuIl19