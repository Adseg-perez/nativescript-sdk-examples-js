"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("tns-core-modules/data/observable");
var segmented_bar_1 = require("tns-core-modules/ui/segmented-bar");
function onPageLoaded(args) {
    var page = args.object;
    var vm = new observable_1.Observable();
    var stackLayout = page.getViewById("stackLayoutId");
    vm.set("sbResult", 0);
    var options = {
        sourceProperty: "sbindex",
        targetProperty: "selectedIndex"
    };
    var segmentedBar = new segmented_bar_1.SegmentedBar();
    var items = [];
    var item1 = new segmented_bar_1.SegmentedBarItem();
    item1.title = "Item1";
    items.push(item1);
    var item2 = new segmented_bar_1.SegmentedBarItem();
    item2.title = "Item2";
    items.push(item2);
    var item3 = new segmented_bar_1.SegmentedBarItem();
    item3.title = "Item3";
    items.push(item3);
    segmentedBar.items = items;
    segmentedBar.bind(options, vm);
    vm.set("sbindex", 0);
    segmentedBar.on("selectedIndexChange", function (args) {
        vm.set("sbResult", args.object.selectedIndex);
    });
    stackLayout.insertChild(segmentedBar, 0);
    page.bindingContext = vm;
}
exports.onPageLoaded = onPageLoaded;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZS1iZWhpbmQtdHMtcGFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNvZGUtYmVoaW5kLXRzLXBhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrREFBNEQ7QUFJNUQsbUVBQWdIO0FBR2hILHNCQUE2QixJQUFJO0lBQzdCLElBQU0sSUFBSSxHQUFnQixJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3RDLElBQU0sRUFBRSxHQUFHLElBQUksdUJBQVUsRUFBRSxDQUFDO0lBQzVCLElBQU0sV0FBVyxHQUE4QixJQUFJLENBQUMsV0FBVyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBRWpGLEVBQUUsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBRXRCLElBQU0sT0FBTyxHQUFHO1FBQ1osY0FBYyxFQUFFLFNBQVM7UUFDekIsY0FBYyxFQUFFLGVBQWU7S0FDbEMsQ0FBQztJQUNGLElBQU0sWUFBWSxHQUFHLElBQUksNEJBQVksRUFBRSxDQUFDO0lBQ3hDLElBQU0sS0FBSyxHQUFHLEVBQUUsQ0FBQztJQUNqQixJQUFNLEtBQUssR0FBRyxJQUFJLGdDQUFnQixFQUFFLENBQUM7SUFDckMsS0FBSyxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUM7SUFDdEIsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNsQixJQUFNLEtBQUssR0FBRyxJQUFJLGdDQUFnQixFQUFFLENBQUM7SUFDckMsS0FBSyxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUM7SUFDdEIsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNsQixJQUFNLEtBQUssR0FBRyxJQUFJLGdDQUFnQixFQUFFLENBQUM7SUFDckMsS0FBSyxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUM7SUFDdEIsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNsQixZQUFZLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUUzQixZQUFZLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQztJQUUvQixFQUFFLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUVyQixZQUFZLENBQUMsRUFBRSxDQUFDLHFCQUFxQixFQUFFLFVBQUMsSUFBbUM7UUFDdkUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQWlCLElBQUksQ0FBQyxNQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDbEUsQ0FBQyxDQUFDLENBQUM7SUFFSCxXQUFXLENBQUMsV0FBVyxDQUFDLFlBQVksRUFBRSxDQUFDLENBQUMsQ0FBQztJQUV6QyxJQUFJLENBQUMsY0FBYyxHQUFHLEVBQUUsQ0FBQztBQUM3QixDQUFDO0FBbkNELG9DQW1DQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvZGF0YS9vYnNlcnZhYmxlXCI7XG5pbXBvcnQge1BhZ2V9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL3BhZ2VcIjtcbmltcG9ydCB7U3RhY2tMYXlvdXR9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL2xheW91dHMvc3RhY2stbGF5b3V0XCJcbi8vID4+IHNlZ21lbnRlZC1iYXItaW1wb3J0XG5pbXBvcnQge1NlZ21lbnRlZEJhciwgU2VnbWVudGVkQmFySXRlbSwgU2VsZWN0ZWRJbmRleENoYW5nZWRFdmVudERhdGF9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL3NlZ21lbnRlZC1iYXJcIjtcbi8vIDw8IHNlZ21lbnRlZC1iYXItaW1wb3J0XG4vLyA+PiBjcmVhdGluZy1zZWdtZW50ZWQtYmFyLWNvZGUtdHNcbmV4cG9ydCBmdW5jdGlvbiBvblBhZ2VMb2FkZWQoYXJncykge1xuICAgIGNvbnN0IHBhZ2U6IFBhZ2UgPSA8UGFnZT4gYXJncy5vYmplY3Q7XG4gICAgY29uc3Qgdm0gPSBuZXcgT2JzZXJ2YWJsZSgpO1xuICAgIGNvbnN0IHN0YWNrTGF5b3V0OiBTdGFja0xheW91dCA9IDxTdGFja0xheW91dD4gcGFnZS5nZXRWaWV3QnlJZChcInN0YWNrTGF5b3V0SWRcIik7XG5cbiAgICB2bS5zZXQoXCJzYlJlc3VsdFwiLCAwKTtcbiAgICAvLyBjcmVhdGluZyBuZXcgU2VnbWVudGVkQmFyIGFuZCBiaW5kaW5nIHRoZSBzZWxlY3RlZEluZGV4IHByb3BlcnR5XG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgICAgc291cmNlUHJvcGVydHk6IFwic2JpbmRleFwiLFxuICAgICAgICB0YXJnZXRQcm9wZXJ0eTogXCJzZWxlY3RlZEluZGV4XCJcbiAgICB9O1xuICAgIGNvbnN0IHNlZ21lbnRlZEJhciA9IG5ldyBTZWdtZW50ZWRCYXIoKTtcbiAgICBjb25zdCBpdGVtcyA9IFtdO1xuICAgIGNvbnN0IGl0ZW0xID0gbmV3IFNlZ21lbnRlZEJhckl0ZW0oKTtcbiAgICBpdGVtMS50aXRsZSA9IFwiSXRlbTFcIjtcbiAgICBpdGVtcy5wdXNoKGl0ZW0xKTtcbiAgICBjb25zdCBpdGVtMiA9IG5ldyBTZWdtZW50ZWRCYXJJdGVtKCk7XG4gICAgaXRlbTIudGl0bGUgPSBcIkl0ZW0yXCI7XG4gICAgaXRlbXMucHVzaChpdGVtMik7XG4gICAgY29uc3QgaXRlbTMgPSBuZXcgU2VnbWVudGVkQmFySXRlbSgpO1xuICAgIGl0ZW0zLnRpdGxlID0gXCJJdGVtM1wiO1xuICAgIGl0ZW1zLnB1c2goaXRlbTMpO1xuICAgIHNlZ21lbnRlZEJhci5pdGVtcyA9IGl0ZW1zO1xuXG4gICAgc2VnbWVudGVkQmFyLmJpbmQob3B0aW9ucywgdm0pO1xuICAgIC8vIHNldHRpbmcgU2VnbWVudGVkQmFyIHNlbGVjdGVkIGluZGV4IHRvIDBcbiAgICB2bS5zZXQoXCJzYmluZGV4XCIsIDApO1xuXG4gICAgc2VnbWVudGVkQmFyLm9uKFwic2VsZWN0ZWRJbmRleENoYW5nZVwiLCAoYXJnczogU2VsZWN0ZWRJbmRleENoYW5nZWRFdmVudERhdGEpID0+IHtcbiAgICAgICAgdm0uc2V0KFwic2JSZXN1bHRcIiwgKDxTZWdtZW50ZWRCYXI+YXJncy5vYmplY3QpLnNlbGVjdGVkSW5kZXgpO1xuICAgIH0pO1xuXG4gICAgc3RhY2tMYXlvdXQuaW5zZXJ0Q2hpbGQoc2VnbWVudGVkQmFyLCAwKTtcblxuICAgIHBhZ2UuYmluZGluZ0NvbnRleHQgPSB2bTtcbn1cbi8vIDw8IGNyZWF0aW5nLXNlZ21lbnRlZC1iYXItY29kZS10c1xuIl19