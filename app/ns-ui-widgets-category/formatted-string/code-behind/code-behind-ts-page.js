"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = require("tns-core-modules/ui/button");
var label_1 = require("tns-core-modules/ui/label");
var text_field_1 = require("tns-core-modules/ui/text-field");
var text_view_1 = require("tns-core-modules/ui/text-view");
var formatted_string_1 = require("tns-core-modules/text/formatted-string");
function onNavigatingTo(args) {
    var page = args.object;
    var container = page.getViewById("container");
    var label = new label_1.Label();
    var firstLabelSpan = new formatted_string_1.Span();
    firstLabelSpan.text = "Formatted String ";
    var secondLabelSpan = new formatted_string_1.Span();
    secondLabelSpan.text = "Label";
    var formattedStringLabel = new formatted_string_1.FormattedString();
    formattedStringLabel.spans.push(firstLabelSpan);
    formattedStringLabel.spans.push(secondLabelSpan);
    label.formattedText = formattedStringLabel;
    var button = new button_1.Button();
    var formattedStringButton = new formatted_string_1.FormattedString();
    var firstButtonSpan = new formatted_string_1.Span();
    var secondButtonSpan = new formatted_string_1.Span();
    firstButtonSpan.text = "Formatted String ";
    secondButtonSpan.text = "Button";
    formattedStringButton.spans.push(firstButtonSpan);
    formattedStringButton.spans.push(secondButtonSpan);
    button.formattedText = formattedStringButton;
    var textField = new text_field_1.TextField();
    var formattedStringTextField = new formatted_string_1.FormattedString();
    var firstTextFieldSpan = new formatted_string_1.Span();
    var secondTextFieldSpan = new formatted_string_1.Span();
    firstTextFieldSpan.fontSize = 15;
    firstTextFieldSpan.text = "Formatted String ";
    secondTextFieldSpan.text = "TextField";
    formattedStringTextField.spans.push(firstTextFieldSpan);
    formattedStringTextField.spans.push(secondTextFieldSpan);
    textField.formattedText = formattedStringTextField;
    var textView = new text_view_1.TextView();
    var formattedStringTextView = new formatted_string_1.FormattedString();
    var firstTextViewSpan = new formatted_string_1.Span();
    var secondTextViewSpan = new formatted_string_1.Span();
    firstTextViewSpan.fontSize = 15;
    firstTextViewSpan.text = "Formatted String ";
    secondTextViewSpan.text = "TextView";
    formattedStringTextView.spans.push(firstTextViewSpan);
    formattedStringTextView.spans.push(secondTextViewSpan);
    textView.formattedText = formattedStringTextView;
    container.addChild(label);
    container.addChild(button);
    container.addChild(textField);
    container.addChild(textView);
}
exports.onNavigatingTo = onNavigatingTo;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZS1iZWhpbmQtdHMtcGFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNvZGUtYmVoaW5kLXRzLXBhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxxREFBb0Q7QUFDcEQsbURBQWtEO0FBR2xELDZEQUEyRDtBQUMzRCwyREFBeUQ7QUFHekQsMkVBQStFO0FBRy9FLHdCQUErQixJQUFlO0lBQzFDLElBQU0sSUFBSSxHQUFTLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDL0IsSUFBTSxTQUFTLEdBQWdCLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUM7SUFFN0QsSUFBTSxLQUFLLEdBQUcsSUFBSSxhQUFLLEVBQUUsQ0FBQztJQUUxQixJQUFNLGNBQWMsR0FBRyxJQUFJLHVCQUFJLEVBQUUsQ0FBQztJQUNsQyxjQUFjLENBQUMsSUFBSSxHQUFHLG1CQUFtQixDQUFDO0lBQzFDLElBQU0sZUFBZSxHQUFHLElBQUksdUJBQUksRUFBRSxDQUFDO0lBQ25DLGVBQWUsQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDO0lBRS9CLElBQU0sb0JBQW9CLEdBQUcsSUFBSSxrQ0FBZSxFQUFFLENBQUM7SUFDbkQsb0JBQW9CLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUNoRCxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBRWpELEtBQUssQ0FBQyxhQUFhLEdBQUcsb0JBQW9CLENBQUM7SUFHM0MsSUFBTSxNQUFNLEdBQUcsSUFBSSxlQUFNLEVBQUUsQ0FBQztJQUU1QixJQUFNLHFCQUFxQixHQUFHLElBQUksa0NBQWUsRUFBRSxDQUFDO0lBQ3BELElBQU0sZUFBZSxHQUFHLElBQUksdUJBQUksRUFBRSxDQUFDO0lBQ25DLElBQU0sZ0JBQWdCLEdBQUcsSUFBSSx1QkFBSSxFQUFFLENBQUM7SUFFcEMsZUFBZSxDQUFDLElBQUksR0FBRyxtQkFBbUIsQ0FBQztJQUMzQyxnQkFBZ0IsQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDO0lBRWpDLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDbEQscUJBQXFCLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBRW5ELE1BQU0sQ0FBQyxhQUFhLEdBQUcscUJBQXFCLENBQUM7SUFHN0MsSUFBTSxTQUFTLEdBQUcsSUFBSSxzQkFBUyxFQUFFLENBQUM7SUFFbEMsSUFBTSx3QkFBd0IsR0FBRyxJQUFJLGtDQUFlLEVBQUUsQ0FBQztJQUN2RCxJQUFNLGtCQUFrQixHQUFHLElBQUksdUJBQUksRUFBRSxDQUFDO0lBQ3RDLElBQU0sbUJBQW1CLEdBQUcsSUFBSSx1QkFBSSxFQUFFLENBQUM7SUFFdkMsa0JBQWtCLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztJQUNqQyxrQkFBa0IsQ0FBQyxJQUFJLEdBQUcsbUJBQW1CLENBQUM7SUFDOUMsbUJBQW1CLENBQUMsSUFBSSxHQUFHLFdBQVcsQ0FBQztJQUV2Qyx3QkFBd0IsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDeEQsd0JBQXdCLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0lBRXpELFNBQVMsQ0FBQyxhQUFhLEdBQUcsd0JBQXdCLENBQUM7SUFHbkQsSUFBTSxRQUFRLEdBQUcsSUFBSSxvQkFBUSxFQUFFLENBQUM7SUFFaEMsSUFBTSx1QkFBdUIsR0FBRyxJQUFJLGtDQUFlLEVBQUUsQ0FBQztJQUN0RCxJQUFNLGlCQUFpQixHQUFHLElBQUksdUJBQUksRUFBRSxDQUFDO0lBQ3JDLElBQU0sa0JBQWtCLEdBQUcsSUFBSSx1QkFBSSxFQUFFLENBQUM7SUFFdEMsaUJBQWlCLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztJQUNoQyxpQkFBaUIsQ0FBQyxJQUFJLEdBQUcsbUJBQW1CLENBQUM7SUFDN0Msa0JBQWtCLENBQUMsSUFBSSxHQUFHLFVBQVUsQ0FBQztJQUVyQyx1QkFBdUIsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFDdEQsdUJBQXVCLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRXZELFFBQVEsQ0FBQyxhQUFhLEdBQUcsdUJBQXVCLENBQUM7SUFFakQsU0FBUyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMxQixTQUFTLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzNCLFNBQVMsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDOUIsU0FBUyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUNqQyxDQUFDO0FBcEVELHdDQW9FQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RGF0YSB9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL2RhdGEvb2JzZXJ2YWJsZVwiO1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvdWkvYnV0dG9uXCI7XG5pbXBvcnQgeyBMYWJlbCB9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL2xhYmVsXCI7XG5pbXBvcnQgeyBTdGFja0xheW91dCB9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL2xheW91dHMvc3RhY2stbGF5b3V0XCI7XG5pbXBvcnQgeyBQYWdlfSBmcm9tIFwidG5zLWNvcmUtbW9kdWxlcy91aS9wYWdlXCI7XG5pbXBvcnQgeyBUZXh0RmllbGQgfSBmcm9tIFwidG5zLWNvcmUtbW9kdWxlcy91aS90ZXh0LWZpZWxkXCI7XG5pbXBvcnQgeyBUZXh0VmlldyB9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL3RleHQtdmlld1wiO1xuXG4vLyA+PiBmb3JtYXR0ZWQtc3RyaW5nLXJlcXVpcmUtdHNcbmltcG9ydCB7IEZvcm1hdHRlZFN0cmluZywgU3BhbiB9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3RleHQvZm9ybWF0dGVkLXN0cmluZ1wiO1xuLy8gaW1wb3J0IHsgU3BhbiB9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3RleHQvc3BhblwiO1xuLy8gPDwgZm9ybWF0dGVkLXN0cmluZy1yZXF1aXJlLXRzXG5leHBvcnQgZnVuY3Rpb24gb25OYXZpZ2F0aW5nVG8oYXJnczogRXZlbnREYXRhKSB7XG4gICAgY29uc3QgcGFnZSA9IDxQYWdlPmFyZ3Mub2JqZWN0O1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IDxTdGFja0xheW91dD5wYWdlLmdldFZpZXdCeUlkKFwiY29udGFpbmVyXCIpO1xuICAgIC8vID4+IGZvcm1hdHRlZC1zdHJpbmctbGFiZWwtY29kZS10c1xuICAgIGNvbnN0IGxhYmVsID0gbmV3IExhYmVsKCk7XG5cbiAgICBjb25zdCBmaXJzdExhYmVsU3BhbiA9IG5ldyBTcGFuKCk7XG4gICAgZmlyc3RMYWJlbFNwYW4udGV4dCA9IFwiRm9ybWF0dGVkIFN0cmluZyBcIjtcbiAgICBjb25zdCBzZWNvbmRMYWJlbFNwYW4gPSBuZXcgU3BhbigpO1xuICAgIHNlY29uZExhYmVsU3Bhbi50ZXh0ID0gXCJMYWJlbFwiO1xuXG4gICAgY29uc3QgZm9ybWF0dGVkU3RyaW5nTGFiZWwgPSBuZXcgRm9ybWF0dGVkU3RyaW5nKCk7XG4gICAgZm9ybWF0dGVkU3RyaW5nTGFiZWwuc3BhbnMucHVzaChmaXJzdExhYmVsU3Bhbik7XG4gICAgZm9ybWF0dGVkU3RyaW5nTGFiZWwuc3BhbnMucHVzaChzZWNvbmRMYWJlbFNwYW4pO1xuXG4gICAgbGFiZWwuZm9ybWF0dGVkVGV4dCA9IGZvcm1hdHRlZFN0cmluZ0xhYmVsO1xuICAgIC8vIDw8IGZvcm1hdHRlZC1zdHJpbmctbGFiZWwtY29kZS10c1xuICAgIC8vID4+IGZvcm1hdHRlZC1zdHJpbmctYnV0dG9uLWNvZGUtdHNcbiAgICBjb25zdCBidXR0b24gPSBuZXcgQnV0dG9uKCk7XG5cbiAgICBjb25zdCBmb3JtYXR0ZWRTdHJpbmdCdXR0b24gPSBuZXcgRm9ybWF0dGVkU3RyaW5nKCk7XG4gICAgY29uc3QgZmlyc3RCdXR0b25TcGFuID0gbmV3IFNwYW4oKTtcbiAgICBjb25zdCBzZWNvbmRCdXR0b25TcGFuID0gbmV3IFNwYW4oKTtcblxuICAgIGZpcnN0QnV0dG9uU3Bhbi50ZXh0ID0gXCJGb3JtYXR0ZWQgU3RyaW5nIFwiO1xuICAgIHNlY29uZEJ1dHRvblNwYW4udGV4dCA9IFwiQnV0dG9uXCI7XG5cbiAgICBmb3JtYXR0ZWRTdHJpbmdCdXR0b24uc3BhbnMucHVzaChmaXJzdEJ1dHRvblNwYW4pO1xuICAgIGZvcm1hdHRlZFN0cmluZ0J1dHRvbi5zcGFucy5wdXNoKHNlY29uZEJ1dHRvblNwYW4pO1xuXG4gICAgYnV0dG9uLmZvcm1hdHRlZFRleHQgPSBmb3JtYXR0ZWRTdHJpbmdCdXR0b247XG4gICAgLy8gPDwgZm9ybWF0dGVkLXN0cmluZy1idXR0b24tY29kZS10c1xuICAgIC8vID4+IGZvcm1hdHRlZC1zdHJpbmctdGV4dGZpZWxkLWNvZGUtdHNcbiAgICBjb25zdCB0ZXh0RmllbGQgPSBuZXcgVGV4dEZpZWxkKCk7XG5cbiAgICBjb25zdCBmb3JtYXR0ZWRTdHJpbmdUZXh0RmllbGQgPSBuZXcgRm9ybWF0dGVkU3RyaW5nKCk7XG4gICAgY29uc3QgZmlyc3RUZXh0RmllbGRTcGFuID0gbmV3IFNwYW4oKTtcbiAgICBjb25zdCBzZWNvbmRUZXh0RmllbGRTcGFuID0gbmV3IFNwYW4oKTtcblxuICAgIGZpcnN0VGV4dEZpZWxkU3Bhbi5mb250U2l6ZSA9IDE1O1xuICAgIGZpcnN0VGV4dEZpZWxkU3Bhbi50ZXh0ID0gXCJGb3JtYXR0ZWQgU3RyaW5nIFwiO1xuICAgIHNlY29uZFRleHRGaWVsZFNwYW4udGV4dCA9IFwiVGV4dEZpZWxkXCI7XG5cbiAgICBmb3JtYXR0ZWRTdHJpbmdUZXh0RmllbGQuc3BhbnMucHVzaChmaXJzdFRleHRGaWVsZFNwYW4pO1xuICAgIGZvcm1hdHRlZFN0cmluZ1RleHRGaWVsZC5zcGFucy5wdXNoKHNlY29uZFRleHRGaWVsZFNwYW4pO1xuXG4gICAgdGV4dEZpZWxkLmZvcm1hdHRlZFRleHQgPSBmb3JtYXR0ZWRTdHJpbmdUZXh0RmllbGQ7XG4gICAgLy8gPDwgZm9ybWF0dGVkLXN0cmluZy10ZXh0ZmllbGQtY29kZS10c1xuICAgIC8vID4+IGZvcm1hdHRlZC1zdHJpbmctdGV4dHZpZXctY29kZS10c1xuICAgIGNvbnN0IHRleHRWaWV3ID0gbmV3IFRleHRWaWV3KCk7XG5cbiAgICBjb25zdCBmb3JtYXR0ZWRTdHJpbmdUZXh0VmlldyA9IG5ldyBGb3JtYXR0ZWRTdHJpbmcoKTtcbiAgICBjb25zdCBmaXJzdFRleHRWaWV3U3BhbiA9IG5ldyBTcGFuKCk7XG4gICAgY29uc3Qgc2Vjb25kVGV4dFZpZXdTcGFuID0gbmV3IFNwYW4oKTtcblxuICAgIGZpcnN0VGV4dFZpZXdTcGFuLmZvbnRTaXplID0gMTU7XG4gICAgZmlyc3RUZXh0Vmlld1NwYW4udGV4dCA9IFwiRm9ybWF0dGVkIFN0cmluZyBcIjtcbiAgICBzZWNvbmRUZXh0Vmlld1NwYW4udGV4dCA9IFwiVGV4dFZpZXdcIjtcblxuICAgIGZvcm1hdHRlZFN0cmluZ1RleHRWaWV3LnNwYW5zLnB1c2goZmlyc3RUZXh0Vmlld1NwYW4pO1xuICAgIGZvcm1hdHRlZFN0cmluZ1RleHRWaWV3LnNwYW5zLnB1c2goc2Vjb25kVGV4dFZpZXdTcGFuKTtcblxuICAgIHRleHRWaWV3LmZvcm1hdHRlZFRleHQgPSBmb3JtYXR0ZWRTdHJpbmdUZXh0VmlldztcbiAgICAvLyA8PCBmb3JtYXR0ZWQtc3RyaW5nLXRleHR2aWV3LWNvZGUtdHNcbiAgICBjb250YWluZXIuYWRkQ2hpbGQobGFiZWwpO1xuICAgIGNvbnRhaW5lci5hZGRDaGlsZChidXR0b24pO1xuICAgIGNvbnRhaW5lci5hZGRDaGlsZCh0ZXh0RmllbGQpO1xuICAgIGNvbnRhaW5lci5hZGRDaGlsZCh0ZXh0Vmlldyk7XG59XG4iXX0=