"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("tns-core-modules/data/observable");
function onNavigatingTo(args) {
    var pokemonList = ["Bulbasaur", "Parasect", "Venonat", "Venomoth", "Diglett",
        "Dugtrio", "Meowth", "Persian", "Psyduck", "Arcanine", "Poliwrath", "Machoke"];
    var page = args.object;
    var vm = observable_1.fromObject({
        pickerItems: pokemonList,
        index: 2
    });
    page.bindingContext = vm;
}
exports.onNavigatingTo = onNavigatingTo;
function onSliderLoaded(args) {
    var sliderComponent = args.object;
    sliderComponent.on("valueChange", function (sargs) {
        var page = sargs.object.page;
        var vm = page.bindingContext;
        console.log("slider index: " + sargs.object.value);
        vm.set("index", sargs.object.value);
    });
}
exports.onSliderLoaded = onSliderLoaded;
function onListPickerLoaded(args) {
    var listPickerComponent = args.object;
    var vm = listPickerComponent.page.bindingContext;
    listPickerComponent.on("selectedIndexChange", function (lpargs) {
        var listPicker = lpargs.object;
        vm.set("index", listPicker.selectedIndex);
        console.log("ListPicker selected index: " + listPicker.selectedIndex);
    });
}
exports.onListPickerLoaded = onListPickerLoaded;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzaWNzLXRzLXBhZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJiYXNpY3MtdHMtcGFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtEQUF5RTtBQUd6RSx3QkFBK0IsSUFBZTtJQUUxQyxJQUFNLFdBQVcsR0FBRyxDQUFDLFdBQVcsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxTQUFTO1FBQzFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBRW5GLElBQU0sSUFBSSxHQUFTLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDL0IsSUFBTSxFQUFFLEdBQUcsdUJBQVUsQ0FBQztRQUNsQixXQUFXLEVBQUUsV0FBVztRQUN4QixLQUFLLEVBQUUsQ0FBQztLQUNYLENBQUMsQ0FBQztJQUNILElBQUksQ0FBQyxjQUFjLEdBQUcsRUFBRSxDQUFDO0FBRTdCLENBQUM7QUFaRCx3Q0FZQztBQUVELHdCQUErQixJQUFJO0lBQy9CLElBQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDcEMsZUFBZSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsVUFBQyxLQUFLO1FBQ3BDLElBQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDO1FBQy9CLElBQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7UUFDL0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBaUIsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFPLENBQUMsQ0FBQztRQUNuRCxFQUFFLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQztBQVJELHdDQVFDO0FBRUQsNEJBQW1DLElBQUk7SUFDbkMsSUFBTSxtQkFBbUIsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3hDLElBQU0sRUFBRSxHQUFHLG1CQUFtQixDQUFDLElBQUksQ0FBQyxjQUFjLENBQUM7SUFDbkQsbUJBQW1CLENBQUMsRUFBRSxDQUFDLHFCQUFxQixFQUFFLFVBQUMsTUFBTTtRQUNqRCxJQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO1FBQ2pDLEVBQUUsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMxQyxPQUFPLENBQUMsR0FBRyxDQUFDLGdDQUE4QixVQUFVLENBQUMsYUFBZSxDQUFDLENBQUM7SUFDMUUsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDO0FBUkQsZ0RBUUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudERhdGEsIGZyb21PYmplY3QgfSBmcm9tIFwidG5zLWNvcmUtbW9kdWxlcy9kYXRhL29ic2VydmFibGVcIjtcbmltcG9ydCB7IFBhZ2UgfSBmcm9tIFwidG5zLWNvcmUtbW9kdWxlcy91aS9wYWdlXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBvbk5hdmlnYXRpbmdUbyhhcmdzOiBFdmVudERhdGEpIHtcbiAgICAvLyA+PiBsaXN0LXBpY2tlci1jb2RlLWJlaGluZC10c1xuICAgIGNvbnN0IHBva2Vtb25MaXN0ID0gW1wiQnVsYmFzYXVyXCIsIFwiUGFyYXNlY3RcIiwgXCJWZW5vbmF0XCIsIFwiVmVub21vdGhcIiwgXCJEaWdsZXR0XCIsXG4gICAgICAgIFwiRHVndHJpb1wiLCBcIk1lb3d0aFwiLCBcIlBlcnNpYW5cIiwgXCJQc3lkdWNrXCIsIFwiQXJjYW5pbmVcIiwgXCJQb2xpd3JhdGhcIiwgXCJNYWNob2tlXCJdO1xuXG4gICAgY29uc3QgcGFnZSA9IDxQYWdlPmFyZ3Mub2JqZWN0O1xuICAgIGNvbnN0IHZtID0gZnJvbU9iamVjdCh7XG4gICAgICAgIHBpY2tlckl0ZW1zOiBwb2tlbW9uTGlzdCxcbiAgICAgICAgaW5kZXg6IDJcbiAgICB9KTtcbiAgICBwYWdlLmJpbmRpbmdDb250ZXh0ID0gdm07XG4gICAgLy8gPDwgbGlzdC1waWNrZXItY29kZS1iZWhpbmQtdHNcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uU2xpZGVyTG9hZGVkKGFyZ3MpIHtcbiAgICBjb25zdCBzbGlkZXJDb21wb25lbnQgPSBhcmdzLm9iamVjdDtcbiAgICBzbGlkZXJDb21wb25lbnQub24oXCJ2YWx1ZUNoYW5nZVwiLCAoc2FyZ3MpID0+IHtcbiAgICAgICAgY29uc3QgcGFnZSA9IHNhcmdzLm9iamVjdC5wYWdlO1xuICAgICAgICBjb25zdCB2bSA9IHBhZ2UuYmluZGluZ0NvbnRleHQ7XG4gICAgICAgIGNvbnNvbGUubG9nKGBzbGlkZXIgaW5kZXg6ICR7c2FyZ3Mub2JqZWN0LnZhbHVlfWApO1xuICAgICAgICB2bS5zZXQoXCJpbmRleFwiLCBzYXJncy5vYmplY3QudmFsdWUpO1xuICAgIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gb25MaXN0UGlja2VyTG9hZGVkKGFyZ3MpIHtcbiAgICBjb25zdCBsaXN0UGlja2VyQ29tcG9uZW50ID0gYXJncy5vYmplY3Q7XG4gICAgY29uc3Qgdm0gPSBsaXN0UGlja2VyQ29tcG9uZW50LnBhZ2UuYmluZGluZ0NvbnRleHQ7XG4gICAgbGlzdFBpY2tlckNvbXBvbmVudC5vbihcInNlbGVjdGVkSW5kZXhDaGFuZ2VcIiwgKGxwYXJncykgPT4ge1xuICAgICAgICBjb25zdCBsaXN0UGlja2VyID0gbHBhcmdzLm9iamVjdDtcbiAgICAgICAgdm0uc2V0KFwiaW5kZXhcIiwgbGlzdFBpY2tlci5zZWxlY3RlZEluZGV4KTtcbiAgICAgICAgY29uc29sZS5sb2coYExpc3RQaWNrZXIgc2VsZWN0ZWQgaW5kZXg6ICR7bGlzdFBpY2tlci5zZWxlY3RlZEluZGV4fWApO1xuICAgIH0pO1xufVxuIl19