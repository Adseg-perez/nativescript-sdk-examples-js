"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("tns-core-modules/data/observable");
function onNavigatingTo(args) {
    var page = args.object;
    var vm = new observable_1.Observable();
    vm.set("progressValue", 10);
    vm.set("progressMaxValue", 100);
    setInterval(function () {
        var value = vm.get("progressValue");
        vm.set("progressValue", value + 2);
    }, 300);
    page.bindingContext = vm;
}
exports.onNavigatingTo = onNavigatingTo;
function onProgressLoaded(args) {
    var sliderComponent = args.object;
    sliderComponent.on("valueChange", function (pargs) {
        console.log("Old Value: " + pargs.oldValue);
        console.log("New Value: " + pargs.value);
    });
}
exports.onProgressLoaded = onProgressLoaded;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzaWNzLXRzLXBhZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJiYXNpY3MtdHMtcGFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtEQUFrRjtBQUlsRix3QkFBK0IsSUFBSTtJQUMvQixJQUFNLElBQUksR0FBZSxJQUFJLENBQUMsTUFBTSxDQUFDO0lBRXJDLElBQU0sRUFBRSxHQUFHLElBQUksdUJBQVUsRUFBRSxDQUFDO0lBQzVCLEVBQUUsQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQzVCLEVBQUUsQ0FBQyxHQUFHLENBQUMsa0JBQWtCLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDaEMsV0FBVyxDQUFDO1FBQ1IsSUFBTSxLQUFLLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUN0QyxFQUFFLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBRSxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDdkMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ1IsSUFBSSxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUM7QUFDN0IsQ0FBQztBQVhELHdDQVdDO0FBRUQsMEJBQWlDLElBQUk7SUFDakMsSUFBTSxlQUFlLEdBQXVCLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDeEQsZUFBZSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsVUFBQyxLQUF5QjtRQUN4RCxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFjLEtBQUssQ0FBQyxRQUFVLENBQUMsQ0FBQztRQUM1QyxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFjLEtBQUssQ0FBQyxLQUFPLENBQUMsQ0FBQztJQUM3QyxDQUFDLENBQUMsQ0FBQztBQUNQLENBQUM7QUFORCw0Q0FNQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUsIFByb3BlcnR5Q2hhbmdlRGF0YSB9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL2RhdGEvb2JzZXJ2YWJsZVwiO1xuaW1wb3J0IHsgUGFnZSB9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL3BhZ2VcIjtcbmltcG9ydCB7IFByb2dyZXNzIH0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvdWkvcHJvZ3Jlc3NcIjtcbi8vID4+IHByb2dyZXNzLXZhbHVlLWNoYW5nZS1ldmVudC10c1xuZXhwb3J0IGZ1bmN0aW9uIG9uTmF2aWdhdGluZ1RvKGFyZ3MpIHtcbiAgICBjb25zdCBwYWdlOiBQYWdlID0gPFBhZ2U+YXJncy5vYmplY3Q7XG4gICAgLy8gc2V0IHVwIHRoZSBpbml0aWFsIHZhbHVlcyBmb3IgdGhlIHByb2dyZXNzIGNvbXBvbmVudHNcbiAgICBjb25zdCB2bSA9IG5ldyBPYnNlcnZhYmxlKCk7XG4gICAgdm0uc2V0KFwicHJvZ3Jlc3NWYWx1ZVwiLCAxMCk7XG4gICAgdm0uc2V0KFwicHJvZ3Jlc3NNYXhWYWx1ZVwiLCAxMDApO1xuICAgIHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB2bS5nZXQoXCJwcm9ncmVzc1ZhbHVlXCIpO1xuICAgICAgICB2bS5zZXQoXCJwcm9ncmVzc1ZhbHVlXCIsIHZhbHVlICsgMik7XG4gICAgfSwgMzAwKTtcbiAgICBwYWdlLmJpbmRpbmdDb250ZXh0ID0gdm07XG59XG4vLyBoYW5kbGUgdmFsdWUgY2hhbmdlXG5leHBvcnQgZnVuY3Rpb24gb25Qcm9ncmVzc0xvYWRlZChhcmdzKSB7XG4gICAgY29uc3Qgc2xpZGVyQ29tcG9uZW50OiBQcm9ncmVzcyA9IDxQcm9ncmVzcz5hcmdzLm9iamVjdDtcbiAgICBzbGlkZXJDb21wb25lbnQub24oXCJ2YWx1ZUNoYW5nZVwiLCAocGFyZ3M6IFByb3BlcnR5Q2hhbmdlRGF0YSkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhgT2xkIFZhbHVlOiAke3BhcmdzLm9sZFZhbHVlfWApO1xuICAgICAgICBjb25zb2xlLmxvZyhgTmV3IFZhbHVlOiAke3BhcmdzLnZhbHVlfWApO1xuICAgIH0pO1xufVxuLy8gPDwgcHJvZ3Jlc3MtdmFsdWUtY2hhbmdlLWV2ZW50LXRzXG4iXX0=