"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("tns-core-modules/data/observable");
var dialogs = require("tns-core-modules/ui/dialogs");
var search_bar_1 = require("tns-core-modules/ui/search-bar");
function onPageLoaded(args) {
    var page = args.object;
    var vm = new observable_1.Observable();
    var stackLayout = page.getViewById("stackLayoutId");
    vm.set("sbResult", "");
    var searchBar = new search_bar_1.SearchBar();
    searchBar.on(search_bar_1.SearchBar.submitEvent, function (sbargs) {
        console.log("Search for ", sbargs.object.text);
        dialogs.alert("Search for " + sbargs.object.text)
            .then(function () {
            console.log("Dialog closed!");
        });
    });
    searchBar.on(search_bar_1.SearchBar.clearEvent, function () {
        console.log("Clear");
        dialogs.alert("Clear SearchBar text")
            .then(function () {
            console.log("Dialog closed!");
        });
    });
    searchBar.on("textChange", function (sbargs) {
        vm.set("sbResult", sbargs.object.text);
    });
    stackLayout.addChild(searchBar);
    page.bindingContext = vm;
}
exports.onPageLoaded = onPageLoaded;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZS1iZWhpbmQtdHMtcGFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNvZGUtYmVoaW5kLXRzLXBhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrREFBeUU7QUFDekUscURBQXVEO0FBSXZELDZEQUEyRDtBQUczRCxzQkFBc0IsSUFBSTtJQUN0QixJQUFNLElBQUksR0FBZSxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JDLElBQU0sRUFBRSxHQUFHLElBQUksdUJBQVUsRUFBRSxDQUFDO0lBQzVCLElBQU0sV0FBVyxHQUE2QixJQUFJLENBQUMsV0FBVyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBRWhGLEVBQUUsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBRXZCLElBQU0sU0FBUyxHQUFHLElBQUksc0JBQVMsRUFBRSxDQUFDO0lBRWxDLFNBQVMsQ0FBQyxFQUFFLENBQUMsc0JBQVMsQ0FBQyxXQUFXLEVBQUUsVUFBQyxNQUFpQjtRQUNsRCxPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBYyxNQUFNLENBQUMsTUFBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzVELE9BQU8sQ0FBQyxLQUFLLENBQUMsZ0JBQTBCLE1BQU0sQ0FBQyxNQUFPLENBQUMsSUFBTSxDQUFDO2FBQ3pELElBQUksQ0FBQztZQUNGLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUNsQyxDQUFDLENBQUMsQ0FBQztJQUNYLENBQUMsQ0FBQyxDQUFDO0lBRUgsU0FBUyxDQUFDLEVBQUUsQ0FBQyxzQkFBUyxDQUFDLFVBQVUsRUFBRTtRQUMvQixPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3JCLE9BQU8sQ0FBQyxLQUFLLENBQUMsc0JBQXNCLENBQUM7YUFDaEMsSUFBSSxDQUFDO1lBQ0YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ2xDLENBQUMsQ0FBQyxDQUFDO0lBQ1gsQ0FBQyxDQUFDLENBQUM7SUFFSCxTQUFTLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxVQUFDLE1BQU07UUFDOUIsRUFBRSxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQWMsTUFBTSxDQUFDLE1BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN4RCxDQUFDLENBQUMsQ0FBQztJQUdILFdBQVcsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUM7QUFDN0IsQ0FBQztBQUVELE9BQU8sQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSwgRXZlbnREYXRhIH0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvZGF0YS9vYnNlcnZhYmxlXCI7XG5pbXBvcnQgKiBhcyBkaWFsb2dzIGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL2RpYWxvZ3NcIjtcbmltcG9ydCB7IFBhZ2UgfSBmcm9tIFwidG5zLWNvcmUtbW9kdWxlcy91aS9wYWdlXCI7XG5pbXBvcnQgeyBTdGFja0xheW91dCB9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL2xheW91dHMvc3RhY2stbGF5b3V0XCI7XG4vLyA+PiBzZWFyY2gtYmFyLWltcG9ydFxuaW1wb3J0IHsgU2VhcmNoQmFyIH0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvdWkvc2VhcmNoLWJhclwiO1xuLy8gPDwgc2VhcmNoLWJhci1pbXBvcnRcbi8vID4+IGNyZWF0aW5nLXNlYXJjaC1iYXItY29kZS10c1xuZnVuY3Rpb24gb25QYWdlTG9hZGVkKGFyZ3MpIHtcbiAgICBjb25zdCBwYWdlOiBQYWdlID0gPFBhZ2U+YXJncy5vYmplY3Q7XG4gICAgY29uc3Qgdm0gPSBuZXcgT2JzZXJ2YWJsZSgpO1xuICAgIGNvbnN0IHN0YWNrTGF5b3V0OiBTdGFja0xheW91dCA9IDxTdGFja0xheW91dD5wYWdlLmdldFZpZXdCeUlkKFwic3RhY2tMYXlvdXRJZFwiKTtcblxuICAgIHZtLnNldChcInNiUmVzdWx0XCIsIFwiXCIpO1xuICAgIC8vIGNyZWF0aW5nIG5ldyBTZWFyY2hCYXJcbiAgICBjb25zdCBzZWFyY2hCYXIgPSBuZXcgU2VhcmNoQmFyKCk7XG4gICAgLy8gc2V0IHVwIFNlYXJjaEJhciBzdWJtaXQgZXZlbnRcbiAgICBzZWFyY2hCYXIub24oU2VhcmNoQmFyLnN1Ym1pdEV2ZW50LCAoc2JhcmdzOiBFdmVudERhdGEpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coXCJTZWFyY2ggZm9yIFwiLCAoPFNlYXJjaEJhcj5zYmFyZ3Mub2JqZWN0KS50ZXh0KTtcbiAgICAgICAgZGlhbG9ncy5hbGVydChgU2VhcmNoIGZvciAkeyg8U2VhcmNoQmFyPnNiYXJncy5vYmplY3QpLnRleHR9YClcbiAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkRpYWxvZyBjbG9zZWQhXCIpO1xuICAgICAgICAgICAgfSk7XG4gICAgfSk7XG4gICAgLy8gc2V0IHVwIFNlYXJjaEJhciBjbGVhciBldmVudFxuICAgIHNlYXJjaEJhci5vbihTZWFyY2hCYXIuY2xlYXJFdmVudCwgKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkNsZWFyXCIpO1xuICAgICAgICBkaWFsb2dzLmFsZXJ0KFwiQ2xlYXIgU2VhcmNoQmFyIHRleHRcIilcbiAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkRpYWxvZyBjbG9zZWQhXCIpO1xuICAgICAgICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBzZWFyY2hCYXIub24oXCJ0ZXh0Q2hhbmdlXCIsIChzYmFyZ3MpID0+IHtcbiAgICAgICAgdm0uc2V0KFwic2JSZXN1bHRcIiwgKDxTZWFyY2hCYXI+c2JhcmdzLm9iamVjdCkudGV4dCk7XG4gICAgfSk7XG5cblxuICAgIHN0YWNrTGF5b3V0LmFkZENoaWxkKHNlYXJjaEJhcik7XG5cbiAgICBwYWdlLmJpbmRpbmdDb250ZXh0ID0gdm07XG59XG5cbmV4cG9ydHMub25QYWdlTG9hZGVkID0gb25QYWdlTG9hZGVkO1xuLy8gPDwgY3JlYXRpbmctc2VhcmNoLWJhci1jb2RlLXRzXG4iXX0=