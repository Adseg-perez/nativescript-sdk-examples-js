"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("tns-core-modules/data/observable");
var dialogs = require("tns-core-modules/ui/dialogs");
var search_bar_1 = require("tns-core-modules/ui/search-bar");
function onPageLoaded(args) {
    var page = args.object;
    var vm = new observable_1.Observable();
    var stackLayout = page.getViewById("stackLayoutId");
    vm.set("sbResult", "");
    var searchBar = new search_bar_1.SearchBar();
    searchBar.on(search_bar_1.SearchBar.submitEvent, function (args) {
        console.log("Search for ", args.object.text);
        dialogs.alert("Search for " + args.object.text)
            .then(function () {
            console.log("Dialog closed!");
        });
    });
    searchBar.on(search_bar_1.SearchBar.clearEvent, function () {
        console.log("Clear");
        dialogs.alert("Clear SearchBar text")
            .then(function () {
            console.log("Dialog closed!");
        });
    });
    searchBar.on("textChange", function (args) {
        vm.set("sbResult", args.object.text);
    });
    stackLayout.addChild(searchBar);
    page.bindingContext = vm;
}
exports.onPageLoaded = onPageLoaded;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZS1iZWhpbmQtdHMtcGFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNvZGUtYmVoaW5kLXRzLXBhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrREFBdUU7QUFDdkUscURBQXVEO0FBSXZELDZEQUF5RDtBQUd6RCxzQkFBc0IsSUFBSTtJQUN0QixJQUFNLElBQUksR0FBZ0IsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN0QyxJQUFNLEVBQUUsR0FBRyxJQUFJLHVCQUFVLEVBQUUsQ0FBQztJQUM1QixJQUFNLFdBQVcsR0FBOEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUVqRixFQUFFLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUV2QixJQUFNLFNBQVMsR0FBRyxJQUFJLHNCQUFTLEVBQUUsQ0FBQztJQUVsQyxTQUFTLENBQUMsRUFBRSxDQUFDLHNCQUFTLENBQUMsV0FBVyxFQUFFLFVBQUMsSUFBZTtRQUNoRCxPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBYyxJQUFJLENBQUMsTUFBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzFELE9BQU8sQ0FBQyxLQUFLLENBQUMsZ0JBQTBCLElBQUksQ0FBQyxNQUFPLENBQUMsSUFBTSxDQUFDO2FBQzNELElBQUksQ0FBQztZQUNGLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUNsQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUMsQ0FBQyxDQUFDO0lBRUgsU0FBUyxDQUFDLEVBQUUsQ0FBQyxzQkFBUyxDQUFDLFVBQVUsRUFBRTtRQUMvQixPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3JCLE9BQU8sQ0FBQyxLQUFLLENBQUMsc0JBQXNCLENBQUM7YUFDcEMsSUFBSSxDQUFDO1lBQ0YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ2xDLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQyxDQUFDLENBQUM7SUFFSCxTQUFTLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxVQUFDLElBQUk7UUFDNUIsRUFBRSxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQWMsSUFBSSxDQUFDLE1BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN0RCxDQUFDLENBQUMsQ0FBQztJQUdILFdBQVcsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUM7SUFFaEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUM7QUFDN0IsQ0FBQztBQUVELE9BQU8sQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtPYnNlcnZhYmxlLCBFdmVudERhdGF9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL2RhdGEvb2JzZXJ2YWJsZVwiO1xyXG5pbXBvcnQgKiBhcyBkaWFsb2dzIGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL2RpYWxvZ3NcIjtcclxuaW1wb3J0IHtQYWdlfSBmcm9tIFwidG5zLWNvcmUtbW9kdWxlcy91aS9wYWdlXCI7XHJcbmltcG9ydCB7U3RhY2tMYXlvdXR9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL2xheW91dHMvc3RhY2stbGF5b3V0XCJcclxuLy8gPj4gc2VhcmNoLWJhci1pbXBvcnRcclxuaW1wb3J0IHtTZWFyY2hCYXJ9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL3NlYXJjaC1iYXJcIjtcclxuLy8gPDwgc2VhcmNoLWJhci1pbXBvcnRcclxuLy8gPj4gY3JlYXRpbmctc2VhcmNoLWJhci1jb2RlLXRzXHJcbmZ1bmN0aW9uIG9uUGFnZUxvYWRlZChhcmdzKSB7XHJcbiAgICBjb25zdCBwYWdlOiBQYWdlID0gPFBhZ2U+IGFyZ3Mub2JqZWN0O1xyXG4gICAgY29uc3Qgdm0gPSBuZXcgT2JzZXJ2YWJsZSgpO1xyXG4gICAgY29uc3Qgc3RhY2tMYXlvdXQ6IFN0YWNrTGF5b3V0ID0gPFN0YWNrTGF5b3V0PiBwYWdlLmdldFZpZXdCeUlkKFwic3RhY2tMYXlvdXRJZFwiKTtcclxuXHJcbiAgICB2bS5zZXQoXCJzYlJlc3VsdFwiLCBcIlwiKTtcclxuICAgIC8vIGNyZWF0aW5nIG5ldyBTZWFyY2hCYXJcclxuICAgIGNvbnN0IHNlYXJjaEJhciA9IG5ldyBTZWFyY2hCYXIoKTtcclxuICAgIC8vIHNldCB1cCBTZWFyY2hCYXIgc3VibWl0IGV2ZW50XHJcbiAgICBzZWFyY2hCYXIub24oU2VhcmNoQmFyLnN1Ym1pdEV2ZW50LCAoYXJnczogRXZlbnREYXRhKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJTZWFyY2ggZm9yIFwiLCAoPFNlYXJjaEJhcj5hcmdzLm9iamVjdCkudGV4dCk7XHJcbiAgICAgICAgZGlhbG9ncy5hbGVydChgU2VhcmNoIGZvciAkeyg8U2VhcmNoQmFyPmFyZ3Mub2JqZWN0KS50ZXh0fWApXHJcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkRpYWxvZyBjbG9zZWQhXCIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICAvLyBzZXQgdXAgU2VhcmNoQmFyIGNsZWFyIGV2ZW50XHJcbiAgICBzZWFyY2hCYXIub24oU2VhcmNoQmFyLmNsZWFyRXZlbnQsICgpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIkNsZWFyXCIpO1xyXG4gICAgICAgIGRpYWxvZ3MuYWxlcnQoXCJDbGVhciBTZWFyY2hCYXIgdGV4dFwiKVxyXG4gICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJEaWFsb2cgY2xvc2VkIVwiKTtcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIHNlYXJjaEJhci5vbihcInRleHRDaGFuZ2VcIiwgKGFyZ3MpID0+IHtcclxuICAgICAgICB2bS5zZXQoXCJzYlJlc3VsdFwiLCAoPFNlYXJjaEJhcj5hcmdzLm9iamVjdCkudGV4dCk7XHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgc3RhY2tMYXlvdXQuYWRkQ2hpbGQoc2VhcmNoQmFyKTtcclxuXHJcbiAgICBwYWdlLmJpbmRpbmdDb250ZXh0ID0gdm07XHJcbn1cclxuXHJcbmV4cG9ydHMub25QYWdlTG9hZGVkID0gb25QYWdlTG9hZGVkO1xyXG4vLyA8PCBjcmVhdGluZy1zZWFyY2gtYmFyLWNvZGUtdHNcclxuIl19