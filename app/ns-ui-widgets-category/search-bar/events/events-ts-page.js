"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("tns-core-modules/data/observable");
var observable_array_1 = require("tns-core-modules/data/observable-array");
var arrayItems = [
    { name: "United States" },
    { name: "Bulgaria" },
    { name: "Germany" },
    { name: "Denmark" },
    { name: "India" },
    { name: "Spain" },
    { name: "Italy" }
];
function onNavigatingTo(args) {
    var page = args.object;
    var vm = new observable_1.Observable();
    var myItems = new observable_array_1.ObservableArray(arrayItems);
    vm.set("myItems", myItems);
    page.bindingContext = vm;
}
exports.onNavigatingTo = onNavigatingTo;
function onSubmit(args) {
    var searchBar = args.object;
    var searchValue = searchBar.text.toLowerCase();
    var myItems = new observable_array_1.ObservableArray();
    if (searchValue !== "") {
        for (var i = 0; i < arrayItems.length; i++) {
            if (arrayItems[i].name.toLowerCase().indexOf(searchValue) !== -1) {
                myItems.push(arrayItems[i]);
            }
        }
    }
    var page = searchBar.page;
    var vm = page.bindingContext;
    vm.set("myItems", myItems);
}
exports.onSubmit = onSubmit;
function onClear(args) {
    var searchBar = args.object;
    searchBar.text = "";
    searchBar.hint = "Search for a country and press enter";
    var myItems = new observable_array_1.ObservableArray();
    arrayItems.forEach(function (item) {
        myItems.push(item);
    });
    var page = searchBar.page;
    var vm = page.bindingContext;
    vm.set("myItems", myItems);
}
exports.onClear = onClear;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnRzLXRzLXBhZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJldmVudHMtdHMtcGFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtEQUE4RDtBQUM5RCwyRUFBeUU7QUFLekUsSUFBTSxVQUFVLEdBQUc7SUFDZixFQUFFLElBQUksRUFBRSxlQUFlLEVBQUU7SUFDekIsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFO0lBQ3BCLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUNuQixFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7SUFDbkIsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFO0lBQ2pCLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRTtJQUNqQixFQUFFLElBQUksRUFBRSxPQUFPLEVBQUU7Q0FDcEIsQ0FBQztBQUNGLHdCQUErQixJQUFJO0lBQy9CLElBQU0sSUFBSSxHQUFlLElBQUksQ0FBQyxNQUFNLENBQUM7SUFFckMsSUFBTSxFQUFFLEdBQUcsSUFBSSx1QkFBVSxFQUFFLENBQUM7SUFDNUIsSUFBTSxPQUFPLEdBQUcsSUFBSSxrQ0FBZSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBRWhELEVBQUUsQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBRTNCLElBQUksQ0FBQyxjQUFjLEdBQUcsRUFBRSxDQUFDO0FBQzdCLENBQUM7QUFURCx3Q0FTQztBQUVELGtCQUF5QixJQUFJO0lBQ3pCLElBQU0sU0FBUyxHQUF5QixJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3BELElBQU0sV0FBVyxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFFakQsSUFBTSxPQUFPLEdBQUcsSUFBSSxrQ0FBZSxFQUFFLENBQUM7SUFDdEMsRUFBRSxDQUFDLENBQUMsV0FBVyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDckIsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7WUFDekMsRUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUMvRCxPQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2hDLENBQUM7UUFDTCxDQUFDO0lBQ0wsQ0FBQztJQUNELElBQU0sSUFBSSxHQUFlLFNBQVMsQ0FBQyxJQUFJLENBQUM7SUFDeEMsSUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQztJQUMvQixFQUFFLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUMvQixDQUFDO0FBZkQsNEJBZUM7QUFFRCxpQkFBd0IsSUFBSTtJQUN4QixJQUFNLFNBQVMsR0FBeUIsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNwRCxTQUFTLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztJQUNwQixTQUFTLENBQUMsSUFBSSxHQUFHLHNDQUFzQyxDQUFDO0lBRXhELElBQU0sT0FBTyxHQUFHLElBQUksa0NBQWUsRUFBRSxDQUFDO0lBQ3RDLFVBQVUsQ0FBQyxPQUFPLENBQUMsVUFBQyxJQUFJO1FBRXBCLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFdkIsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFNLElBQUksR0FBZSxTQUFTLENBQUMsSUFBSSxDQUFDO0lBQ3hDLElBQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7SUFDL0IsRUFBRSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDL0IsQ0FBQztBQWZELDBCQWVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL2RhdGEvb2JzZXJ2YWJsZVwiO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZUFycmF5IH0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvZGF0YS9vYnNlcnZhYmxlLWFycmF5XCI7XG5pbXBvcnQgeyBQYWdlIH0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvdWkvcGFnZVwiO1xuaW1wb3J0IHsgU2VhcmNoQmFyIH0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvdWkvc2VhcmNoLWJhclwiO1xuLy8gPj4gY2xlYXItc2VhcmNoLWJhci1zdWJtaXQtdHNcblxuY29uc3QgYXJyYXlJdGVtcyA9IFtcbiAgICB7IG5hbWU6IFwiVW5pdGVkIFN0YXRlc1wiIH0sXG4gICAgeyBuYW1lOiBcIkJ1bGdhcmlhXCIgfSxcbiAgICB7IG5hbWU6IFwiR2VybWFueVwiIH0sXG4gICAgeyBuYW1lOiBcIkRlbm1hcmtcIiB9LFxuICAgIHsgbmFtZTogXCJJbmRpYVwiIH0sXG4gICAgeyBuYW1lOiBcIlNwYWluXCIgfSxcbiAgICB7IG5hbWU6IFwiSXRhbHlcIiB9XG5dO1xuZXhwb3J0IGZ1bmN0aW9uIG9uTmF2aWdhdGluZ1RvKGFyZ3MpIHtcbiAgICBjb25zdCBwYWdlOiBQYWdlID0gPFBhZ2U+YXJncy5vYmplY3Q7XG4gICAgLy8gc2V0IHVwIHRoZSBMaXN0VmlldyBpdGVtc1xuICAgIGNvbnN0IHZtID0gbmV3IE9ic2VydmFibGUoKTtcbiAgICBjb25zdCBteUl0ZW1zID0gbmV3IE9ic2VydmFibGVBcnJheShhcnJheUl0ZW1zKTtcblxuICAgIHZtLnNldChcIm15SXRlbXNcIiwgbXlJdGVtcyk7XG5cbiAgICBwYWdlLmJpbmRpbmdDb250ZXh0ID0gdm07XG59XG4vLyBzZWFyY2ggZm9yIGNvdW50cnlcbmV4cG9ydCBmdW5jdGlvbiBvblN1Ym1pdChhcmdzKSB7XG4gICAgY29uc3Qgc2VhcmNoQmFyOiBTZWFyY2hCYXIgPSA8U2VhcmNoQmFyPmFyZ3Mub2JqZWN0O1xuICAgIGNvbnN0IHNlYXJjaFZhbHVlID0gc2VhcmNoQmFyLnRleHQudG9Mb3dlckNhc2UoKTtcblxuICAgIGNvbnN0IG15SXRlbXMgPSBuZXcgT2JzZXJ2YWJsZUFycmF5KCk7XG4gICAgaWYgKHNlYXJjaFZhbHVlICE9PSBcIlwiKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyYXlJdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGFycmF5SXRlbXNbaV0ubmFtZS50b0xvd2VyQ2FzZSgpLmluZGV4T2Yoc2VhcmNoVmFsdWUpICE9PSAtMSkge1xuICAgICAgICAgICAgICAgIG15SXRlbXMucHVzaChhcnJheUl0ZW1zW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBwYWdlOiBQYWdlID0gPFBhZ2U+c2VhcmNoQmFyLnBhZ2U7XG4gICAgY29uc3Qgdm0gPSBwYWdlLmJpbmRpbmdDb250ZXh0O1xuICAgIHZtLnNldChcIm15SXRlbXNcIiwgbXlJdGVtcyk7XG59XG4vLyBjbGVhciBTZWFyY2hCYXIgdGV4dCBhbmQgbG9hZCBMaXN0VmlldyBpbml0aWFsIGRhdGFcbmV4cG9ydCBmdW5jdGlvbiBvbkNsZWFyKGFyZ3MpIHtcbiAgICBjb25zdCBzZWFyY2hCYXI6IFNlYXJjaEJhciA9IDxTZWFyY2hCYXI+YXJncy5vYmplY3Q7XG4gICAgc2VhcmNoQmFyLnRleHQgPSBcIlwiO1xuICAgIHNlYXJjaEJhci5oaW50ID0gXCJTZWFyY2ggZm9yIGEgY291bnRyeSBhbmQgcHJlc3MgZW50ZXJcIjtcblxuICAgIGNvbnN0IG15SXRlbXMgPSBuZXcgT2JzZXJ2YWJsZUFycmF5KCk7XG4gICAgYXJyYXlJdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XG5cbiAgICAgICAgbXlJdGVtcy5wdXNoKGl0ZW0pO1xuXG4gICAgfSk7XG5cbiAgICBjb25zdCBwYWdlOiBQYWdlID0gPFBhZ2U+c2VhcmNoQmFyLnBhZ2U7XG4gICAgY29uc3Qgdm0gPSBwYWdlLmJpbmRpbmdDb250ZXh0O1xuICAgIHZtLnNldChcIm15SXRlbXNcIiwgbXlJdGVtcyk7XG59XG4vLyA8PCBjbGVhci1zZWFyY2gtYmFyLXN1Ym1pdC10c1xuIl19