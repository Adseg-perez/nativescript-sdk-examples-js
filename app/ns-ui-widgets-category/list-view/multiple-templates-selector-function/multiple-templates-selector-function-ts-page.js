"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("tns-core-modules/data/observable");
var observable_array_1 = require("tns-core-modules/data/observable-array");
var listArray = new observable_array_1.ObservableArray([
    observable_1.fromObject({
        name: "Joyce Dean",
        age: 20
    }),
    observable_1.fromObject({
        name: "Joel Robertson",
        age: 15
    }),
    observable_1.fromObject({
        name: "Sherman Martin",
        age: 35
    }),
    observable_1.fromObject({
        name: "Lela Richardson",
        age: 40
    }),
    observable_1.fromObject({
        name: "Jackie Maldonado",
        age: 17
    }),
    observable_1.fromObject({
        name: "Kathryn Byrd",
        age: 18
    }),
    observable_1.fromObject({
        name: "Ervin Powers",
        age: 50
    }),
    observable_1.fromObject({
        name: "Leland Warner",
        age: 12
    }),
    observable_1.fromObject({
        name: "Nicholas Bowers",
        age: 45
    }),
    observable_1.fromObject({
        name: "Alex Soto",
        age: 46
    }),
    observable_1.fromObject({
        name: "Naomi Carson",
        age: 11
    }),
    observable_1.fromObject({
        name: "Rufus Edwards",
        age: 65
    }),
    observable_1.fromObject({
        name: "Ian Ellis",
        age: 17
    }),
    observable_1.fromObject({
        name: "Pat Vasquez",
        age: 20
    }),
    observable_1.fromObject({
        name: "Chelsea Burton",
        age: 30
    }),
    observable_1.fromObject({
        name: "Karl Bates",
        age: 20
    }),
    observable_1.fromObject({
        name: "Evan Rivera",
        age: 40
    }),
    observable_1.fromObject({
        name: "Tony Lawson",
        age: 16
    }),
    observable_1.fromObject({
        name: "Wallace Little",
        age: 20
    }),
    observable_1.fromObject({
        name: "Carrie Tran",
        age: 23
    }),
    observable_1.fromObject({
        name: "Tyler Washington",
        age: 18
    })
]);
function onNavigatingTo(args) {
    var page = args.object;
    var vm = new observable_1.Observable();
    vm.set("listArray", listArray);
    page.bindingContext = vm;
}
exports.onNavigatingTo = onNavigatingTo;
function selectItemTemplate(item, index, items) {
    return item.age % 2 === 0 ? "even" : "odd";
}
exports.selectItemTemplate = selectItemTemplate;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGlwbGUtdGVtcGxhdGVzLXNlbGVjdG9yLWZ1bmN0aW9uLXRzLXBhZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJtdWx0aXBsZS10ZW1wbGF0ZXMtc2VsZWN0b3ItZnVuY3Rpb24tdHMtcGFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtEQUEwRTtBQUMxRSwyRUFBeUU7QUFFekUsSUFBTSxTQUFTLEdBQUcsSUFBSSxrQ0FBZSxDQUNqQztJQUNJLHVCQUFVLENBQUM7UUFDUCxJQUFJLEVBQUUsWUFBWTtRQUNsQixHQUFHLEVBQUUsRUFBRTtLQUNWLENBQUM7SUFDRix1QkFBVSxDQUFDO1FBQ1AsSUFBSSxFQUFFLGdCQUFnQjtRQUN0QixHQUFHLEVBQUUsRUFBRTtLQUNWLENBQUM7SUFDRix1QkFBVSxDQUFDO1FBQ1AsSUFBSSxFQUFFLGdCQUFnQjtRQUN0QixHQUFHLEVBQUUsRUFBRTtLQUNWLENBQUM7SUFDRix1QkFBVSxDQUFDO1FBQ1AsSUFBSSxFQUFFLGlCQUFpQjtRQUN2QixHQUFHLEVBQUUsRUFBRTtLQUNWLENBQUM7SUFDRix1QkFBVSxDQUFDO1FBQ1AsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixHQUFHLEVBQUUsRUFBRTtLQUNWLENBQUM7SUFDRix1QkFBVSxDQUFDO1FBQ1AsSUFBSSxFQUFFLGNBQWM7UUFDcEIsR0FBRyxFQUFFLEVBQUU7S0FDVixDQUFDO0lBQ0YsdUJBQVUsQ0FBQztRQUNQLElBQUksRUFBRSxjQUFjO1FBQ3BCLEdBQUcsRUFBRSxFQUFFO0tBQ1YsQ0FBQztJQUNGLHVCQUFVLENBQUM7UUFDUCxJQUFJLEVBQUUsZUFBZTtRQUNyQixHQUFHLEVBQUUsRUFBRTtLQUNWLENBQUM7SUFDRix1QkFBVSxDQUFDO1FBQ1AsSUFBSSxFQUFFLGlCQUFpQjtRQUN2QixHQUFHLEVBQUUsRUFBRTtLQUNWLENBQUM7SUFDRix1QkFBVSxDQUFDO1FBQ1AsSUFBSSxFQUFFLFdBQVc7UUFDakIsR0FBRyxFQUFFLEVBQUU7S0FDVixDQUFDO0lBQ0YsdUJBQVUsQ0FBQztRQUNQLElBQUksRUFBRSxjQUFjO1FBQ3BCLEdBQUcsRUFBRSxFQUFFO0tBQ1YsQ0FBQztJQUNGLHVCQUFVLENBQUM7UUFDUCxJQUFJLEVBQUUsZUFBZTtRQUNyQixHQUFHLEVBQUUsRUFBRTtLQUNWLENBQUM7SUFDRix1QkFBVSxDQUFDO1FBQ1AsSUFBSSxFQUFFLFdBQVc7UUFDakIsR0FBRyxFQUFFLEVBQUU7S0FDVixDQUFDO0lBQ0YsdUJBQVUsQ0FBQztRQUNQLElBQUksRUFBRSxhQUFhO1FBQ25CLEdBQUcsRUFBRSxFQUFFO0tBQ1YsQ0FBQztJQUNGLHVCQUFVLENBQUM7UUFDUCxJQUFJLEVBQUUsZ0JBQWdCO1FBQ3RCLEdBQUcsRUFBRSxFQUFFO0tBQ1YsQ0FBQztJQUNGLHVCQUFVLENBQUM7UUFDUCxJQUFJLEVBQUUsWUFBWTtRQUNsQixHQUFHLEVBQUUsRUFBRTtLQUNWLENBQUM7SUFDRix1QkFBVSxDQUFDO1FBQ1AsSUFBSSxFQUFFLGFBQWE7UUFDbkIsR0FBRyxFQUFFLEVBQUU7S0FDVixDQUFDO0lBQ0YsdUJBQVUsQ0FBQztRQUNQLElBQUksRUFBRSxhQUFhO1FBQ25CLEdBQUcsRUFBRSxFQUFFO0tBQ1YsQ0FBQztJQUNGLHVCQUFVLENBQUM7UUFDUCxJQUFJLEVBQUUsZ0JBQWdCO1FBQ3RCLEdBQUcsRUFBRSxFQUFFO0tBQ1YsQ0FBQztJQUNGLHVCQUFVLENBQUM7UUFDUCxJQUFJLEVBQUUsYUFBYTtRQUNuQixHQUFHLEVBQUUsRUFBRTtLQUNWLENBQUM7SUFDRix1QkFBVSxDQUFDO1FBQ1AsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixHQUFHLEVBQUUsRUFBRTtLQUNWLENBQUM7Q0FDTCxDQUNKLENBQUM7QUFDRix3QkFBK0IsSUFBSTtJQUMvQixJQUFNLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3pCLElBQU0sRUFBRSxHQUFHLElBQUksdUJBQVUsRUFBRSxDQUFDO0lBRTVCLEVBQUUsQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBRS9CLElBQUksQ0FBQyxjQUFjLEdBQUcsRUFBRSxDQUFDO0FBQzdCLENBQUM7QUFQRCx3Q0FPQztBQUdELDRCQUFtQyxJQUFJLEVBQUUsS0FBSyxFQUFFLEtBQUs7SUFDakQsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7QUFDL0MsQ0FBQztBQUZELGdEQUVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSwgZnJvbU9iamVjdCB9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL2RhdGEvb2JzZXJ2YWJsZVwiO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZUFycmF5IH0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvZGF0YS9vYnNlcnZhYmxlLWFycmF5XCI7XG5cbmNvbnN0IGxpc3RBcnJheSA9IG5ldyBPYnNlcnZhYmxlQXJyYXkoXG4gICAgW1xuICAgICAgICBmcm9tT2JqZWN0KHtcbiAgICAgICAgICAgIG5hbWU6IFwiSm95Y2UgRGVhblwiLFxuICAgICAgICAgICAgYWdlOiAyMFxuICAgICAgICB9KSxcbiAgICAgICAgZnJvbU9iamVjdCh7XG4gICAgICAgICAgICBuYW1lOiBcIkpvZWwgUm9iZXJ0c29uXCIsXG4gICAgICAgICAgICBhZ2U6IDE1XG4gICAgICAgIH0pLFxuICAgICAgICBmcm9tT2JqZWN0KHtcbiAgICAgICAgICAgIG5hbWU6IFwiU2hlcm1hbiBNYXJ0aW5cIixcbiAgICAgICAgICAgIGFnZTogMzVcbiAgICAgICAgfSksXG4gICAgICAgIGZyb21PYmplY3Qoe1xuICAgICAgICAgICAgbmFtZTogXCJMZWxhIFJpY2hhcmRzb25cIixcbiAgICAgICAgICAgIGFnZTogNDBcbiAgICAgICAgfSksXG4gICAgICAgIGZyb21PYmplY3Qoe1xuICAgICAgICAgICAgbmFtZTogXCJKYWNraWUgTWFsZG9uYWRvXCIsXG4gICAgICAgICAgICBhZ2U6IDE3XG4gICAgICAgIH0pLFxuICAgICAgICBmcm9tT2JqZWN0KHtcbiAgICAgICAgICAgIG5hbWU6IFwiS2F0aHJ5biBCeXJkXCIsXG4gICAgICAgICAgICBhZ2U6IDE4XG4gICAgICAgIH0pLFxuICAgICAgICBmcm9tT2JqZWN0KHtcbiAgICAgICAgICAgIG5hbWU6IFwiRXJ2aW4gUG93ZXJzXCIsXG4gICAgICAgICAgICBhZ2U6IDUwXG4gICAgICAgIH0pLFxuICAgICAgICBmcm9tT2JqZWN0KHtcbiAgICAgICAgICAgIG5hbWU6IFwiTGVsYW5kIFdhcm5lclwiLFxuICAgICAgICAgICAgYWdlOiAxMlxuICAgICAgICB9KSxcbiAgICAgICAgZnJvbU9iamVjdCh7XG4gICAgICAgICAgICBuYW1lOiBcIk5pY2hvbGFzIEJvd2Vyc1wiLFxuICAgICAgICAgICAgYWdlOiA0NVxuICAgICAgICB9KSxcbiAgICAgICAgZnJvbU9iamVjdCh7XG4gICAgICAgICAgICBuYW1lOiBcIkFsZXggU290b1wiLFxuICAgICAgICAgICAgYWdlOiA0NlxuICAgICAgICB9KSxcbiAgICAgICAgZnJvbU9iamVjdCh7XG4gICAgICAgICAgICBuYW1lOiBcIk5hb21pIENhcnNvblwiLFxuICAgICAgICAgICAgYWdlOiAxMVxuICAgICAgICB9KSxcbiAgICAgICAgZnJvbU9iamVjdCh7XG4gICAgICAgICAgICBuYW1lOiBcIlJ1ZnVzIEVkd2FyZHNcIixcbiAgICAgICAgICAgIGFnZTogNjVcbiAgICAgICAgfSksXG4gICAgICAgIGZyb21PYmplY3Qoe1xuICAgICAgICAgICAgbmFtZTogXCJJYW4gRWxsaXNcIixcbiAgICAgICAgICAgIGFnZTogMTdcbiAgICAgICAgfSksXG4gICAgICAgIGZyb21PYmplY3Qoe1xuICAgICAgICAgICAgbmFtZTogXCJQYXQgVmFzcXVlelwiLFxuICAgICAgICAgICAgYWdlOiAyMFxuICAgICAgICB9KSxcbiAgICAgICAgZnJvbU9iamVjdCh7XG4gICAgICAgICAgICBuYW1lOiBcIkNoZWxzZWEgQnVydG9uXCIsXG4gICAgICAgICAgICBhZ2U6IDMwXG4gICAgICAgIH0pLFxuICAgICAgICBmcm9tT2JqZWN0KHtcbiAgICAgICAgICAgIG5hbWU6IFwiS2FybCBCYXRlc1wiLFxuICAgICAgICAgICAgYWdlOiAyMFxuICAgICAgICB9KSxcbiAgICAgICAgZnJvbU9iamVjdCh7XG4gICAgICAgICAgICBuYW1lOiBcIkV2YW4gUml2ZXJhXCIsXG4gICAgICAgICAgICBhZ2U6IDQwXG4gICAgICAgIH0pLFxuICAgICAgICBmcm9tT2JqZWN0KHtcbiAgICAgICAgICAgIG5hbWU6IFwiVG9ueSBMYXdzb25cIixcbiAgICAgICAgICAgIGFnZTogMTZcbiAgICAgICAgfSksXG4gICAgICAgIGZyb21PYmplY3Qoe1xuICAgICAgICAgICAgbmFtZTogXCJXYWxsYWNlIExpdHRsZVwiLFxuICAgICAgICAgICAgYWdlOiAyMFxuICAgICAgICB9KSxcbiAgICAgICAgZnJvbU9iamVjdCh7XG4gICAgICAgICAgICBuYW1lOiBcIkNhcnJpZSBUcmFuXCIsXG4gICAgICAgICAgICBhZ2U6IDIzXG4gICAgICAgIH0pLFxuICAgICAgICBmcm9tT2JqZWN0KHtcbiAgICAgICAgICAgIG5hbWU6IFwiVHlsZXIgV2FzaGluZ3RvblwiLFxuICAgICAgICAgICAgYWdlOiAxOFxuICAgICAgICB9KVxuICAgIF1cbik7XG5leHBvcnQgZnVuY3Rpb24gb25OYXZpZ2F0aW5nVG8oYXJncykge1xuICAgIGNvbnN0IHBhZ2UgPSBhcmdzLm9iamVjdDtcbiAgICBjb25zdCB2bSA9IG5ldyBPYnNlcnZhYmxlKCk7XG5cbiAgICB2bS5zZXQoXCJsaXN0QXJyYXlcIiwgbGlzdEFycmF5KTtcblxuICAgIHBhZ2UuYmluZGluZ0NvbnRleHQgPSB2bTtcbn1cblxuLy8gPj4gbGlzdHZpZXctY3JlYXRlLXNlbGVjdG9yLWZ1bmN0aW9uLWNvZGUtdHNcbmV4cG9ydCBmdW5jdGlvbiBzZWxlY3RJdGVtVGVtcGxhdGUoaXRlbSwgaW5kZXgsIGl0ZW1zKSB7XG4gICAgcmV0dXJuIGl0ZW0uYWdlICUgMiA9PT0gMCA/IFwiZXZlblwiIDogXCJvZGRcIjtcbn1cbi8vIDw8IGxpc3R2aWV3LWNyZWF0ZS1zZWxlY3Rvci1mdW5jdGlvbi1jb2RlLXRzXG4iXX0=