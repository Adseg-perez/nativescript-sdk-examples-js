"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tab_view_1 = require("tns-core-modules/ui/tab-view");
var dialogs = require("tns-core-modules/ui/dialogs");
var stack_layout_1 = require("tns-core-modules/ui/layouts/stack-layout");
var label_1 = require("tns-core-modules/ui/label");
function onLoaded(args) {
    var stackLayout = args.object;
    var stackLayout0 = new stack_layout_1.StackLayout();
    var label0 = new label_1.Label();
    label0.text = "Tab 0";
    stackLayout0.addChild(label0);
    var stackLayout1 = new stack_layout_1.StackLayout();
    var label1 = new label_1.Label();
    label1.text = "Tab 1";
    stackLayout1.addChild(label1);
    var tabViewItem0 = new tab_view_1.TabViewItem();
    tabViewItem0.title = "Tab 0";
    tabViewItem0.view = stackLayout0;
    var tabViewItem1 = new tab_view_1.TabViewItem();
    tabViewItem1.title = "Tab 1";
    tabViewItem1.view = stackLayout1;
    var tabView = new tab_view_1.TabView();
    var items = [];
    items.push(tabViewItem0);
    items.push(tabViewItem1);
    tabView.items = items;
    tabView.selectedIndex = 1;
    tabView.on(tab_view_1.TabView.selectedIndexChangedEvent, function (args) {
        dialogs.alert("Selected index has changed ( Old index: " + args.oldIndex + " New index: " + args.newIndex + ")")
            .then(function () {
            console.log("Dialog closed!");
        });
    });
    stackLayout.addChild(tabView);
}
exports.onLoaded = onLoaded;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZS1iZWhpbmQtdHMtcGFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNvZGUtYmVoaW5kLXRzLXBhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSx5REFBaUc7QUFFakcscURBQXVEO0FBQ3ZELHlFQUFxRTtBQUNyRSxtREFBZ0Q7QUFFaEQsa0JBQXlCLElBQUk7SUFDekIsSUFBTSxXQUFXLEdBQThCLElBQUksQ0FBQyxNQUFNLENBQUM7SUFLM0QsSUFBTSxZQUFZLEdBQUcsSUFBSSwwQkFBVyxFQUFFLENBQUM7SUFDdkMsSUFBTSxNQUFNLEdBQUcsSUFBSSxhQUFLLEVBQUUsQ0FBQztJQUMzQixNQUFNLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQztJQUN0QixZQUFZLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRTlCLElBQU0sWUFBWSxHQUFHLElBQUksMEJBQVcsRUFBRSxDQUFDO0lBQ3ZDLElBQU0sTUFBTSxHQUFHLElBQUksYUFBSyxFQUFFLENBQUM7SUFDM0IsTUFBTSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUM7SUFDdEIsWUFBWSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUU5QixJQUFNLFlBQVksR0FBRyxJQUFJLHNCQUFXLEVBQUUsQ0FBQztJQUN2QyxZQUFZLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQztJQUM3QixZQUFZLENBQUMsSUFBSSxHQUFHLFlBQVksQ0FBQztJQUVqQyxJQUFNLFlBQVksR0FBRyxJQUFJLHNCQUFXLEVBQUUsQ0FBQztJQUN2QyxZQUFZLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQztJQUM3QixZQUFZLENBQUMsSUFBSSxHQUFHLFlBQVksQ0FBQztJQUdqQyxJQUFNLE9BQU8sR0FBRyxJQUFJLGtCQUFPLEVBQUUsQ0FBQztJQUU5QixJQUFNLEtBQUssR0FBRyxFQUFFLENBQUM7SUFDakIsS0FBSyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUN6QixLQUFLLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3pCLE9BQU8sQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBRXRCLE9BQU8sQ0FBQyxhQUFhLEdBQUcsQ0FBQyxDQUFDO0lBRTFCLE9BQU8sQ0FBQyxFQUFFLENBQUMsa0JBQU8sQ0FBQyx5QkFBeUIsRUFBRSxVQUFDLElBQWtDO1FBQzdFLE9BQU8sQ0FBQyxLQUFLLENBQUMsNkNBQTJDLElBQUksQ0FBQyxRQUFRLG9CQUFlLElBQUksQ0FBQyxRQUFRLE1BQUcsQ0FBQzthQUNqRyxJQUFJLENBQUM7WUFDRixPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDbEMsQ0FBQyxDQUFDLENBQUM7SUFDWCxDQUFDLENBQUMsQ0FBQztJQUdILFdBQVcsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDbEMsQ0FBQztBQTNDRCw0QkEyQ0MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA+PiB0YWItdmlldy1pbXBvcnRcbmltcG9ydCB7VGFiVmlldywgVGFiVmlld0l0ZW0sIFNlbGVjdGVkSW5kZXhDaGFuZ2VkRXZlbnREYXRhfSBmcm9tIFwidG5zLWNvcmUtbW9kdWxlcy91aS90YWItdmlld1wiO1xuLy8gPDwgdGFiLXZpZXctaW1wb3J0XG5pbXBvcnQgKiBhcyBkaWFsb2dzIGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL2RpYWxvZ3NcIjtcbmltcG9ydCB7U3RhY2tMYXlvdXR9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL2xheW91dHMvc3RhY2stbGF5b3V0XCI7XG5pbXBvcnQge0xhYmVsfSBmcm9tIFwidG5zLWNvcmUtbW9kdWxlcy91aS9sYWJlbFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gb25Mb2FkZWQoYXJncykge1xuICAgIGNvbnN0IHN0YWNrTGF5b3V0OiBTdGFja0xheW91dCA9IDxTdGFja0xheW91dD4gYXJncy5vYmplY3Q7XG5cbiAgICAvLyA+PiBjcmVhdGluZy10YWItdmlldy1jb2RlLWNvZGUtdHNcblxuICAgIC8vIGNyZWF0aW5nIFRhYlZpZXcgSXRlbSBjb250ZW50IGJvZHlcbiAgICBjb25zdCBzdGFja0xheW91dDAgPSBuZXcgU3RhY2tMYXlvdXQoKTtcbiAgICBjb25zdCBsYWJlbDAgPSBuZXcgTGFiZWwoKTtcbiAgICBsYWJlbDAudGV4dCA9IFwiVGFiIDBcIjtcbiAgICBzdGFja0xheW91dDAuYWRkQ2hpbGQobGFiZWwwKTtcblxuICAgIGNvbnN0IHN0YWNrTGF5b3V0MSA9IG5ldyBTdGFja0xheW91dCgpO1xuICAgIGNvbnN0IGxhYmVsMSA9IG5ldyBMYWJlbCgpO1xuICAgIGxhYmVsMS50ZXh0ID0gXCJUYWIgMVwiO1xuICAgIHN0YWNrTGF5b3V0MS5hZGRDaGlsZChsYWJlbDEpO1xuXG4gICAgY29uc3QgdGFiVmlld0l0ZW0wID0gbmV3IFRhYlZpZXdJdGVtKCk7XG4gICAgdGFiVmlld0l0ZW0wLnRpdGxlID0gXCJUYWIgMFwiO1xuICAgIHRhYlZpZXdJdGVtMC52aWV3ID0gc3RhY2tMYXlvdXQwO1xuXG4gICAgY29uc3QgdGFiVmlld0l0ZW0xID0gbmV3IFRhYlZpZXdJdGVtKCk7XG4gICAgdGFiVmlld0l0ZW0xLnRpdGxlID0gXCJUYWIgMVwiO1xuICAgIHRhYlZpZXdJdGVtMS52aWV3ID0gc3RhY2tMYXlvdXQxO1xuXG4gICAgLy8gY3JlYXRpbmcgVGFiVmlld1xuICAgIGNvbnN0IHRhYlZpZXcgPSBuZXcgVGFiVmlldygpO1xuICAgIC8vIHNldHRpbmcgdXAgaXRzIGl0ZW1zIGFuZCB0aGUgc2VsZWN0ZWQgaW5kZXhcbiAgICBjb25zdCBpdGVtcyA9IFtdO1xuICAgIGl0ZW1zLnB1c2godGFiVmlld0l0ZW0wKTtcbiAgICBpdGVtcy5wdXNoKHRhYlZpZXdJdGVtMSk7XG4gICAgdGFiVmlldy5pdGVtcyA9IGl0ZW1zO1xuXG4gICAgdGFiVmlldy5zZWxlY3RlZEluZGV4ID0gMTtcbiAgICAvLyBoYW5kbGluZyBzZWxlY3RlZEluZGV4Q2hhbmdlZEV2ZW50XG4gICAgdGFiVmlldy5vbihUYWJWaWV3LnNlbGVjdGVkSW5kZXhDaGFuZ2VkRXZlbnQsIChhcmdzOlNlbGVjdGVkSW5kZXhDaGFuZ2VkRXZlbnREYXRhKSA9PiB7XG4gICAgICAgIGRpYWxvZ3MuYWxlcnQoYFNlbGVjdGVkIGluZGV4IGhhcyBjaGFuZ2VkICggT2xkIGluZGV4OiAke2FyZ3Mub2xkSW5kZXh9IE5ldyBpbmRleDogJHthcmdzLm5ld0luZGV4fSlgKVxuICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiRGlhbG9nIGNsb3NlZCFcIik7XG4gICAgICAgICAgICB9KTtcbiAgICB9KTtcbiAgICAvLyA8PCBjcmVhdGluZy10YWItdmlldy1jb2RlLXRzXG5cbiAgICBzdGFja0xheW91dC5hZGRDaGlsZCh0YWJWaWV3KTtcbn1cbiJdfQ==