"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("tns-core-modules/data/observable");
function onNavigatingTo(args) {
    var page = args.object;
    var vm = new observable_1.Observable();
    vm.set("hourResult", "Hour: ...");
    vm.set("minuteResult", "Minute: ...");
    vm.set("timeResult", "Time: ...");
    page.bindingContext = vm;
}
exports.onNavigatingTo = onNavigatingTo;
function onPickerLoaded(args) {
    var timePicker = args.object;
    timePicker.hour = 10;
    timePicker.minute = 25;
    timePicker.on("timeChange", function (args) {
        console.log("Picked TIME: ", args.value);
        console.log("Previous TIME: ", args.oldValue);
        var page = args.object.page;
        var vm = page.bindingContext;
        vm.set("hourResult", "Hour: " + args.object.hour);
        vm.set("minuteResult", "Minute: " + args.object.minute);
        vm.set("timeResult", "TIme: " + args.object.time);
    });
}
exports.onPickerLoaded = onPickerLoaded;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzaWNzLXRzLXBhZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJiYXNpY3MtdHMtcGFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtEQUF1RTtBQUd2RSx3QkFBK0IsSUFBSTtJQUMvQixJQUFNLElBQUksR0FBZ0IsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN0QyxJQUFNLEVBQUUsR0FBRyxJQUFJLHVCQUFVLEVBQUUsQ0FBQztJQUM1QixFQUFFLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNsQyxFQUFFLENBQUMsR0FBRyxDQUFDLGNBQWMsRUFBRSxhQUFhLENBQUMsQ0FBQztJQUN0QyxFQUFFLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNsQyxJQUFJLENBQUMsY0FBYyxHQUFHLEVBQUUsQ0FBQztBQUM3QixDQUFDO0FBUEQsd0NBT0M7QUFHRCx3QkFBK0IsSUFBSTtJQUMvQixJQUFNLFVBQVUsR0FBNEIsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUd4RCxVQUFVLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztJQUNyQixVQUFVLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztJQVN2QixVQUFVLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxVQUFDLElBQVM7UUFFbEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pDLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBRzlDLElBQU0sSUFBSSxHQUFnQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQztRQUMzQyxJQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDO1FBQy9CLEVBQUUsQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLFdBQVMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFNLENBQUMsQ0FBQztRQUNsRCxFQUFFLENBQUMsR0FBRyxDQUFDLGNBQWMsRUFBRSxhQUFXLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBUSxDQUFDLENBQUM7UUFDeEQsRUFBRSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsV0FBUyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQU0sQ0FBQyxDQUFDO0lBRXRELENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQztBQTNCRCx3Q0EyQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGUsIEV2ZW50RGF0YX0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvZGF0YS9vYnNlcnZhYmxlXCI7XHJcbmltcG9ydCB7VGltZVBpY2tlcn0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvdWkvdGltZS1waWNrZXJcIjtcclxuaW1wb3J0IHsgUGFnZSB9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL3BhZ2VcIjtcclxuZXhwb3J0IGZ1bmN0aW9uIG9uTmF2aWdhdGluZ1RvKGFyZ3MpIHtcclxuICAgIGNvbnN0IHBhZ2U6IFBhZ2UgPSA8UGFnZT4gYXJncy5vYmplY3Q7XHJcbiAgICBjb25zdCB2bSA9IG5ldyBPYnNlcnZhYmxlKCk7XHJcbiAgICB2bS5zZXQoXCJob3VyUmVzdWx0XCIsIFwiSG91cjogLi4uXCIpO1xyXG4gICAgdm0uc2V0KFwibWludXRlUmVzdWx0XCIsIFwiTWludXRlOiAuLi5cIik7XHJcbiAgICB2bS5zZXQoXCJ0aW1lUmVzdWx0XCIsIFwiVGltZTogLi4uXCIpO1xyXG4gICAgcGFnZS5iaW5kaW5nQ29udGV4dCA9IHZtO1xyXG59XHJcblxyXG4vLyA+PiB0aW1lLXBpY2tlci1jb25maWd1cmUtY29kZS10c1xyXG5leHBvcnQgZnVuY3Rpb24gb25QaWNrZXJMb2FkZWQoYXJncykge1xyXG4gICAgY29uc3QgdGltZVBpY2tlcjogVGltZVBpY2tlciA9IDxUaW1lUGlja2VyPiBhcmdzLm9iamVjdDtcclxuXHJcbiAgICAvLyBDb25maWd1cmFibGUgcHJvcGVydGllcyBvZiBUaW1lUGlja2VyXHJcbiAgICB0aW1lUGlja2VyLmhvdXIgPSAxMDtcclxuICAgIHRpbWVQaWNrZXIubWludXRlID0gMjU7XHJcbiAgICAvLyB0aW1lUGlja2VyLm1pbnV0ZUludGVydmFsID0gNTtcclxuICAgIC8vIHRpbWVQaWNrZXIubWluSG91ciA9IDc7XHJcbiAgICAvLyB0aW1lUGlja2VyLm1heEhvdXIgPSAxMTtcclxuICAgIC8vIHRpbWVQaWNrZXIubWluTWludXRlID0gMTA7XHJcbiAgICAvLyB0aW1lUGlja2VyLm1heE1pbnV0ZSA9IDQ1O1xyXG4gICAgLy8gdGltZVBpY2tlci50aW1lID0gbmV3IERhdGUoKTtcclxuXHJcbiAgICAvLyBoYW5kbGluZyAndGltZUNoYW5nZScgZXZlbnQgdmlhIGNvZGUgYmVoaW5kXHJcbiAgICB0aW1lUGlja2VyLm9uKFwidGltZUNoYW5nZVwiLCAoYXJnczogYW55KSA9PiB7XHJcbiAgICAgICAgLy8gYXJncyBpcyBvZiB0eXBlIFByb3BlcnR5Q2hhbmdlRGF0YVxyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiUGlja2VkIFRJTUU6IFwiLCBhcmdzLnZhbHVlKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIlByZXZpb3VzIFRJTUU6IFwiLCBhcmdzLm9sZFZhbHVlKTtcclxuXHJcbiAgICAgICAgLy8gPj4gKGhpZGUpXHJcbiAgICAgICAgY29uc3QgcGFnZTogUGFnZSA9IDxQYWdlPiBhcmdzLm9iamVjdC5wYWdlO1xyXG4gICAgICAgIGNvbnN0IHZtID0gcGFnZS5iaW5kaW5nQ29udGV4dDtcclxuICAgICAgICB2bS5zZXQoXCJob3VyUmVzdWx0XCIsIGBIb3VyOiAke2FyZ3Mub2JqZWN0LmhvdXJ9YCk7XHJcbiAgICAgICAgdm0uc2V0KFwibWludXRlUmVzdWx0XCIsIGBNaW51dGU6ICR7YXJncy5vYmplY3QubWludXRlfWApO1xyXG4gICAgICAgIHZtLnNldChcInRpbWVSZXN1bHRcIiwgYFRJbWU6ICR7YXJncy5vYmplY3QudGltZX1gKTtcclxuICAgICAgICAvLyA8PCAoaGlkZSlcclxuICAgIH0pO1xyXG59XHJcbi8vIDw8IHRpbWUtcGlja2VyLWNvbmZpZ3VyZS1jb2RlLXRzXHJcbiJdfQ==