"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("tns-core-modules/data/observable");
function onNavigatingTo(args) {
    var page = args.object;
    var vm = new observable_1.Observable();
    vm.set("hourResult", "Hour: ...");
    vm.set("minuteResult", "Minute: ...");
    vm.set("timeResult", "Time: ...");
    page.bindingContext = vm;
}
exports.onNavigatingTo = onNavigatingTo;
function onPickerLoaded(args) {
    var timePicker = args.object;
    timePicker.hour = 10;
    timePicker.minute = 25;
    timePicker.on("timeChange", function (args) {
        console.log("Picked TIME: ", args.value);
        console.log("Previous TIME: ", args.oldValue);
        var page = args.object.page;
        var vm = page.bindingContext;
        vm.set("hourResult", "Hour: " + args.object.hour);
        vm.set("minuteResult", "Minute: " + args.object.minute);
        vm.set("timeResult", "TIme: " + args.object.time);
    });
}
exports.onPickerLoaded = onPickerLoaded;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzaWNzLXRzLXBhZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJiYXNpY3MtdHMtcGFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtEQUF1RTtBQUd2RSx3QkFBK0IsSUFBSTtJQUMvQixJQUFNLElBQUksR0FBZ0IsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN0QyxJQUFNLEVBQUUsR0FBRyxJQUFJLHVCQUFVLEVBQUUsQ0FBQztJQUM1QixFQUFFLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNsQyxFQUFFLENBQUMsR0FBRyxDQUFDLGNBQWMsRUFBRSxhQUFhLENBQUMsQ0FBQztJQUN0QyxFQUFFLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNsQyxJQUFJLENBQUMsY0FBYyxHQUFHLEVBQUUsQ0FBQztBQUM3QixDQUFDO0FBUEQsd0NBT0M7QUFHRCx3QkFBK0IsSUFBSTtJQUMvQixJQUFNLFVBQVUsR0FBNEIsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUd4RCxVQUFVLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztJQUNyQixVQUFVLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztJQVN2QixVQUFVLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxVQUFDLElBQVM7UUFFbEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pDLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBRzlDLElBQU0sSUFBSSxHQUFnQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQztRQUMzQyxJQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDO1FBQy9CLEVBQUUsQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLFdBQVMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFNLENBQUMsQ0FBQztRQUNsRCxFQUFFLENBQUMsR0FBRyxDQUFDLGNBQWMsRUFBRSxhQUFXLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBUSxDQUFDLENBQUM7UUFDeEQsRUFBRSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsV0FBUyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQU0sQ0FBQyxDQUFDO0lBRXRELENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQztBQTNCRCx3Q0EyQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGUsIEV2ZW50RGF0YX0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvZGF0YS9vYnNlcnZhYmxlXCI7XG5pbXBvcnQge1RpbWVQaWNrZXJ9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL3RpbWUtcGlja2VyXCI7XG5pbXBvcnQgeyBQYWdlIH0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvdWkvcGFnZVwiO1xuZXhwb3J0IGZ1bmN0aW9uIG9uTmF2aWdhdGluZ1RvKGFyZ3MpIHtcbiAgICBjb25zdCBwYWdlOiBQYWdlID0gPFBhZ2U+IGFyZ3Mub2JqZWN0O1xuICAgIGNvbnN0IHZtID0gbmV3IE9ic2VydmFibGUoKTtcbiAgICB2bS5zZXQoXCJob3VyUmVzdWx0XCIsIFwiSG91cjogLi4uXCIpO1xuICAgIHZtLnNldChcIm1pbnV0ZVJlc3VsdFwiLCBcIk1pbnV0ZTogLi4uXCIpO1xuICAgIHZtLnNldChcInRpbWVSZXN1bHRcIiwgXCJUaW1lOiAuLi5cIik7XG4gICAgcGFnZS5iaW5kaW5nQ29udGV4dCA9IHZtO1xufVxuXG4vLyA+PiB0aW1lLXBpY2tlci1jb25maWd1cmUtY29kZS10c1xuZXhwb3J0IGZ1bmN0aW9uIG9uUGlja2VyTG9hZGVkKGFyZ3MpIHtcbiAgICBjb25zdCB0aW1lUGlja2VyOiBUaW1lUGlja2VyID0gPFRpbWVQaWNrZXI+IGFyZ3Mub2JqZWN0O1xuXG4gICAgLy8gQ29uZmlndXJhYmxlIHByb3BlcnRpZXMgb2YgVGltZVBpY2tlclxuICAgIHRpbWVQaWNrZXIuaG91ciA9IDEwO1xuICAgIHRpbWVQaWNrZXIubWludXRlID0gMjU7XG4gICAgLy8gdGltZVBpY2tlci5taW51dGVJbnRlcnZhbCA9IDU7XG4gICAgLy8gdGltZVBpY2tlci5taW5Ib3VyID0gNztcbiAgICAvLyB0aW1lUGlja2VyLm1heEhvdXIgPSAxMTtcbiAgICAvLyB0aW1lUGlja2VyLm1pbk1pbnV0ZSA9IDEwO1xuICAgIC8vIHRpbWVQaWNrZXIubWF4TWludXRlID0gNDU7XG4gICAgLy8gdGltZVBpY2tlci50aW1lID0gbmV3IERhdGUoKTtcblxuICAgIC8vIGhhbmRsaW5nICd0aW1lQ2hhbmdlJyBldmVudCB2aWEgY29kZSBiZWhpbmRcbiAgICB0aW1lUGlja2VyLm9uKFwidGltZUNoYW5nZVwiLCAoYXJnczogYW55KSA9PiB7XG4gICAgICAgIC8vIGFyZ3MgaXMgb2YgdHlwZSBQcm9wZXJ0eUNoYW5nZURhdGFcbiAgICAgICAgY29uc29sZS5sb2coXCJQaWNrZWQgVElNRTogXCIsIGFyZ3MudmFsdWUpO1xuICAgICAgICBjb25zb2xlLmxvZyhcIlByZXZpb3VzIFRJTUU6IFwiLCBhcmdzLm9sZFZhbHVlKTtcblxuICAgICAgICAvLyA+PiAoaGlkZSlcbiAgICAgICAgY29uc3QgcGFnZTogUGFnZSA9IDxQYWdlPiBhcmdzLm9iamVjdC5wYWdlO1xuICAgICAgICBjb25zdCB2bSA9IHBhZ2UuYmluZGluZ0NvbnRleHQ7XG4gICAgICAgIHZtLnNldChcImhvdXJSZXN1bHRcIiwgYEhvdXI6ICR7YXJncy5vYmplY3QuaG91cn1gKTtcbiAgICAgICAgdm0uc2V0KFwibWludXRlUmVzdWx0XCIsIGBNaW51dGU6ICR7YXJncy5vYmplY3QubWludXRlfWApO1xuICAgICAgICB2bS5zZXQoXCJ0aW1lUmVzdWx0XCIsIGBUSW1lOiAke2FyZ3Mub2JqZWN0LnRpbWV9YCk7XG4gICAgICAgIC8vIDw8IChoaWRlKVxuICAgIH0pO1xufVxuLy8gPDwgdGltZS1waWNrZXItY29uZmlndXJlLWNvZGUtdHNcbiJdfQ==