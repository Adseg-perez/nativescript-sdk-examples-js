"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("tns-core-modules/data/observable");
var platform_1 = require("tns-core-modules/platform");
function onNavigatingTo(args) {
    var page = args.object;
    var vm = new observable_1.Observable();
    vm.set("webViewSrc", "<!DOCTYPE html><html><body><h1>My First Heading</h1><p>My first paragraph.</p></body></html>");
    vm.set("touchResult", "Touch: x: _ y: _");
    vm.set("panResult", "Pan: deltaX: _ deltaY: _");
    page.bindingContext = vm;
}
exports.onNavigatingTo = onNavigatingTo;
function onWebViewLoaded(webargs) {
    var webview = webargs.object;
    if (platform_1.isAndroid) {
        webview.android.getSettings().setDisplayZoomControls(false);
    }
}
exports.onWebViewLoaded = onWebViewLoaded;
function webViewTouch(args) {
    var page = args.object.page;
    var vm = page.bindingContext;
    vm.set("touchResult", "Touch: x: " + args.getX().toFixed(3) + " y: " + args.getY().toFixed(3));
    console.log("Touch: x: " + args.getX().toFixed(3) + " y: " + args.getY().toFixed(3));
}
exports.webViewTouch = webViewTouch;
function webViewPan(args) {
    var page = args.object.page;
    var vm = page.bindingContext;
    vm.set("panResult", "Pan: deltaX: " + args.deltaX.toFixed(3) + " deltaY: " + args.deltaY.toFixed(3));
    console.log("Pan: deltaX: " + args.deltaX.toFixed(3) + " deltaY: " + args.deltaY.toFixed(3));
}
exports.webViewPan = webViewPan;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VzdHVyZXMtdHMtcGFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImdlc3R1cmVzLXRzLXBhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrREFBNEQ7QUFLNUQsc0RBQW9EO0FBRXBELHdCQUErQixJQUFJO0lBQy9CLElBQU0sSUFBSSxHQUFnQixJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3RDLElBQU0sRUFBRSxHQUFHLElBQUksdUJBQVUsRUFBRSxDQUFDO0lBQzVCLEVBQUUsQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLDhGQUE4RixDQUFDLENBQUM7SUFDckgsRUFBRSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztJQUMxQyxFQUFFLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSwwQkFBMEIsQ0FBQyxDQUFDO0lBQ2hELElBQUksQ0FBQyxjQUFjLEdBQUcsRUFBRSxDQUFDO0FBQzdCLENBQUM7QUFQRCx3Q0FPQztBQUVELHlCQUFnQyxPQUFPO0lBQ25DLElBQU0sT0FBTyxHQUFxQixPQUFPLENBQUMsTUFBTSxDQUFDO0lBQ2pELEVBQUUsQ0FBQyxDQUFDLG9CQUFTLENBQUMsQ0FBQyxDQUFDO1FBQ1osT0FBTyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNoRSxDQUFDO0FBQ0wsQ0FBQztBQUxELDBDQUtDO0FBRUQsc0JBQTZCLElBQUk7SUFDN0IsSUFBTSxJQUFJLEdBQWdCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQzNDLElBQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7SUFDL0IsRUFBRSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsZUFBYSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxZQUFPLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFHLENBQUMsQ0FBQztJQUMxRixPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWEsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsWUFBTyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBRyxDQUFDLENBQUM7QUFDcEYsQ0FBQztBQUxELG9DQUtDO0FBRUQsb0JBQTJCLElBQUk7SUFDM0IsSUFBTSxJQUFJLEdBQWdCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQzNDLElBQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7SUFDL0IsRUFBRSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsa0JBQWdCLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxpQkFBWSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUcsQ0FBQyxDQUFDO0lBQ2hHLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWdCLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxpQkFBWSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUcsQ0FBQyxDQUFDO0FBQzVGLENBQUM7QUFMRCxnQ0FLQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvZGF0YS9vYnNlcnZhYmxlXCI7XG5pbXBvcnQgeyBQYWdlIH0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvdWkvcGFnZVwiO1xuLy8gPj4gd2Vidmlldy1pbXBvcnRcbmltcG9ydCB7V2ViVmlld30gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvdWkvd2ViLXZpZXdcIjtcbi8vIDw8IHdlYnZpZXctaW1wb3J0XG5pbXBvcnQge2lzQW5kcm9pZH0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvcGxhdGZvcm1cIjtcbi8vID4+IHdlYnZpZXctanMtZ2VzdHVyZXMtdHNcbmV4cG9ydCBmdW5jdGlvbiBvbk5hdmlnYXRpbmdUbyhhcmdzKSB7XG4gICAgY29uc3QgcGFnZTogUGFnZSA9IDxQYWdlPiBhcmdzLm9iamVjdDtcbiAgICBjb25zdCB2bSA9IG5ldyBPYnNlcnZhYmxlKCk7XG4gICAgdm0uc2V0KFwid2ViVmlld1NyY1wiLCBcIjwhRE9DVFlQRSBodG1sPjxodG1sPjxib2R5PjxoMT5NeSBGaXJzdCBIZWFkaW5nPC9oMT48cD5NeSBmaXJzdCBwYXJhZ3JhcGguPC9wPjwvYm9keT48L2h0bWw+XCIpO1xuICAgIHZtLnNldChcInRvdWNoUmVzdWx0XCIsIFwiVG91Y2g6IHg6IF8geTogX1wiKTtcbiAgICB2bS5zZXQoXCJwYW5SZXN1bHRcIiwgXCJQYW46IGRlbHRhWDogXyBkZWx0YVk6IF9cIik7XG4gICAgcGFnZS5iaW5kaW5nQ29udGV4dCA9IHZtO1xufVxuLy8gZGlzYWJsaW5nIHRoZSBXZWJWaWV3J3Mgem9vbSBjb250cm9sKHJlcXVpcmVkIG9ubHkgZm9yIEFuZHJvaWQpXG5leHBvcnQgZnVuY3Rpb24gb25XZWJWaWV3TG9hZGVkKHdlYmFyZ3MpIHtcbiAgICBjb25zdCB3ZWJ2aWV3OldlYlZpZXcgPSA8V2ViVmlldz4gd2ViYXJncy5vYmplY3Q7XG4gICAgaWYgKGlzQW5kcm9pZCkge1xuICAgICAgICB3ZWJ2aWV3LmFuZHJvaWQuZ2V0U2V0dGluZ3MoKS5zZXREaXNwbGF5Wm9vbUNvbnRyb2xzKGZhbHNlKTtcbiAgICB9XG59XG4vLyBzZXR0aW5nIHVwIFRvdWNoIGdlc3R1cmUgY2FsbGJhY2sgbWV0aG9kXG5leHBvcnQgZnVuY3Rpb24gd2ViVmlld1RvdWNoKGFyZ3MpIHtcbiAgICBjb25zdCBwYWdlOiBQYWdlID0gPFBhZ2U+IGFyZ3Mub2JqZWN0LnBhZ2U7XG4gICAgY29uc3Qgdm0gPSBwYWdlLmJpbmRpbmdDb250ZXh0O1xuICAgIHZtLnNldChcInRvdWNoUmVzdWx0XCIsIGBUb3VjaDogeDogJHthcmdzLmdldFgoKS50b0ZpeGVkKDMpfSB5OiAke2FyZ3MuZ2V0WSgpLnRvRml4ZWQoMyl9YCk7XG4gICAgY29uc29sZS5sb2coYFRvdWNoOiB4OiAke2FyZ3MuZ2V0WCgpLnRvRml4ZWQoMyl9IHk6ICR7YXJncy5nZXRZKCkudG9GaXhlZCgzKX1gKTtcbn1cbi8vIHNldHRpbmcgdXAgUGFuIGdlc3R1cmUgY2FsbGJhY2sgbWV0aG9kXG5leHBvcnQgZnVuY3Rpb24gd2ViVmlld1BhbihhcmdzKSB7XG4gICAgY29uc3QgcGFnZTogUGFnZSA9IDxQYWdlPiBhcmdzLm9iamVjdC5wYWdlO1xuICAgIGNvbnN0IHZtID0gcGFnZS5iaW5kaW5nQ29udGV4dDtcbiAgICB2bS5zZXQoXCJwYW5SZXN1bHRcIiwgYFBhbjogZGVsdGFYOiAke2FyZ3MuZGVsdGFYLnRvRml4ZWQoMyl9IGRlbHRhWTogJHthcmdzLmRlbHRhWS50b0ZpeGVkKDMpfWApO1xuICAgIGNvbnNvbGUubG9nKGBQYW46IGRlbHRhWDogJHthcmdzLmRlbHRhWC50b0ZpeGVkKDMpfSBkZWx0YVk6ICR7YXJncy5kZWx0YVkudG9GaXhlZCgzKX1gKTtcbn1cbi8vIDw8IHdlYnZpZXctanMtZ2VzdHVyZXMtdHNcbiJdfQ==