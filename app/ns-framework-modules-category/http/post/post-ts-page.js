"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("tns-core-modules/data/observable");
7;
var http_1 = require("tns-core-modules/http");
function onNavigatingTo(args) {
    var page = args.object;
    var vm = new observable_1.Observable();
    vm.set("user", "");
    vm.set("pass", "");
    vm.set("message", "");
    vm.set("isItemVisible", false);
    page.bindingContext = vm;
}
exports.onNavigatingTo = onNavigatingTo;
function makePostRequest(args) {
    var page = args.object.page;
    var vm = page.bindingContext;
    http_1.request({
        url: "https://httpbin.org/post",
        method: "POST",
        headers: { "Content-Type": "application/json" },
        content: JSON.stringify({
            username: vm.get("user"),
            password: vm.get("pass")
        })
    }).then(function (response) {
        var result = response.content.toJSON();
        vm.set("isItemVisible", true);
        vm.set("message", result.json.username);
    }, function (e) {
        console.log("Error: ");
        console.log(e);
    });
}
exports.makePostRequest = makePostRequest;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9zdC10cy1wYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicG9zdC10cy1wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0RBQTREO0FBQUEsQ0FBQyxDQUFBO0FBRzdELDhDQUFxRjtBQUVyRix3QkFBK0IsSUFBSTtJQUMvQixJQUFNLElBQUksR0FBZ0IsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN0QyxJQUFNLEVBQUUsR0FBRyxJQUFJLHVCQUFVLEVBQUUsQ0FBQztJQUU1QixFQUFFLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNuQixFQUFFLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNuQixFQUFFLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN0QixFQUFFLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUMvQixJQUFJLENBQUMsY0FBYyxHQUFHLEVBQUUsQ0FBQztBQUM3QixDQUFDO0FBVEQsd0NBU0M7QUFFRCx5QkFBZ0MsSUFBSTtJQUNoQyxJQUFNLElBQUksR0FBZ0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFDM0MsSUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQztJQUUzQixjQUFPLENBQUM7UUFDSixHQUFHLEVBQUUsMEJBQTBCO1FBQy9CLE1BQU0sRUFBRSxNQUFNO1FBQ2QsT0FBTyxFQUFFLEVBQUUsY0FBYyxFQUFFLGtCQUFrQixFQUFFO1FBQy9DLE9BQU8sRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDO1lBQ3BCLFFBQVEsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQztZQUN4QixRQUFRLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUM7U0FDM0IsQ0FBQztLQUNMLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQyxRQUFRO1FBQ2IsSUFBTSxNQUFNLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUV6QyxFQUFFLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUM5QixFQUFFLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBRTVDLENBQUMsRUFBRSxVQUFDLENBQUM7UUFFRCxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3ZCLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFbkIsQ0FBQyxDQUFDLENBQUM7QUFFWCxDQUFDO0FBekJELDBDQXlCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvZGF0YS9vYnNlcnZhYmxlXCI7N1xyXG5pbXBvcnQge1BhZ2V9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL3BhZ2VcIjtcclxuLy8gPj4gaW1wb3J0LWh0dHBcclxuaW1wb3J0IHtyZXF1ZXN0LCBnZXRGaWxlLCBnZXRJbWFnZSwgZ2V0SlNPTiwgZ2V0U3RyaW5nfSBmcm9tIFwidG5zLWNvcmUtbW9kdWxlcy9odHRwXCI7XHJcbi8vIDw8IGltcG9ydC1odHRwXHJcbmV4cG9ydCBmdW5jdGlvbiBvbk5hdmlnYXRpbmdUbyhhcmdzKSB7XHJcbiAgICBjb25zdCBwYWdlOiBQYWdlID0gPFBhZ2U+IGFyZ3Mub2JqZWN0O1xyXG4gICAgY29uc3Qgdm0gPSBuZXcgT2JzZXJ2YWJsZSgpO1xyXG5cclxuICAgIHZtLnNldChcInVzZXJcIiwgXCJcIik7XHJcbiAgICB2bS5zZXQoXCJwYXNzXCIsIFwiXCIpO1xyXG4gICAgdm0uc2V0KFwibWVzc2FnZVwiLCBcIlwiKTtcclxuICAgIHZtLnNldChcImlzSXRlbVZpc2libGVcIiwgZmFsc2UpO1xyXG4gICAgcGFnZS5iaW5kaW5nQ29udGV4dCA9IHZtO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gbWFrZVBvc3RSZXF1ZXN0KGFyZ3MpIHtcclxuICAgIGNvbnN0IHBhZ2U6IFBhZ2UgPSA8UGFnZT4gYXJncy5vYmplY3QucGFnZTtcclxuICAgIGNvbnN0IHZtID0gcGFnZS5iaW5kaW5nQ29udGV4dDtcclxuICAgIC8vID4+IGh0dHAtcG9zdFxyXG4gICAgICAgIHJlcXVlc3Qoe1xyXG4gICAgICAgICAgICB1cmw6IFwiaHR0cHM6Ly9odHRwYmluLm9yZy9wb3N0XCIsXHJcbiAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHsgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSxcclxuICAgICAgICAgICAgY29udGVudDogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICAgICAgdXNlcm5hbWU6IHZtLmdldChcInVzZXJcIiksXHJcbiAgICAgICAgICAgICAgICBwYXNzd29yZDogdm0uZ2V0KFwicGFzc1wiKVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pLnRoZW4oKHJlc3BvbnNlKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHJlc3BvbnNlLmNvbnRlbnQudG9KU09OKCk7XHJcbiAgICAgICAgICAgIC8vID4+IChoaWRlKVxyXG4gICAgICAgICAgICB2bS5zZXQoXCJpc0l0ZW1WaXNpYmxlXCIsIHRydWUpO1xyXG4gICAgICAgICAgICB2bS5zZXQoXCJtZXNzYWdlXCIsIHJlc3VsdC5qc29uLnVzZXJuYW1lKTtcclxuICAgICAgICAgICAgLy8gPDwgKGhpZGUpXHJcbiAgICAgICAgfSwgKGUpID0+IHtcclxuICAgICAgICAgICAgLy8gPj4gKGhpZGUpXHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiRXJyb3I6IFwiKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZSk7XHJcbiAgICAgICAgICAgIC8vIDw8IChoaWRlKVxyXG4gICAgICAgIH0pO1xyXG4gICAgLy8gPDwgaHR0cC1wb3N0XHJcbn1cclxuXHJcbiJdfQ==