"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_array_1 = require("tns-core-modules/data/observable-array");
function onNavigatingTo(data) {
    var page = data.object;
    var myObservableArray = new observable_array_1.ObservableArray(10);
    var arr = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34];
    myObservableArray = new observable_array_1.ObservableArray(arr);
    myObservableArray = new observable_array_1.ObservableArray(1, 2, 3, 5, 8, 13, 21, 33, 55, 89);
    var firstItem = myObservableArray.getItem(0);
    var secondItem = myObservableArray.getItem(1);
    var thirdItem = myObservableArray.getItem(2);
    myObservableArray.on(observable_array_1.ObservableArray.changeEvent, function (args) {
        console.log(args.index);
        console.log(args.action);
        console.log(args.addedCount);
        console.log(args.removed);
    });
    myObservableArray.setItem(7, 34);
    myObservableArray.push(144);
    myObservableArray.push([377, 233]);
    myObservableArray.reverse();
    myObservableArray.shift();
    var myArray = new observable_array_1.ObservableArray(myObservableArray);
    myArray.sort();
    var index = myObservableArray.indexOf(13);
    console.log(index);
    page.bindingContext = { items: myObservableArray };
}
exports.onNavigatingTo = onNavigatingTo;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzaWNzLXRzLXBhZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJiYXNpY3MtdHMtcGFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLDJFQUFzRjtBQUd0Rix3QkFBK0IsSUFBSTtJQUMvQixJQUFNLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBSXpCLElBQUksaUJBQWlCLEdBQUcsSUFBSSxrQ0FBZSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBR2hELElBQU0sR0FBRyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDOUMsaUJBQWlCLEdBQUcsSUFBSSxrQ0FBZSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRTdDLGlCQUFpQixHQUFHLElBQUksa0NBQWUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUkzRSxJQUFNLFNBQVMsR0FBRyxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDL0MsSUFBTSxVQUFVLEdBQUcsaUJBQWlCLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2hELElBQU0sU0FBUyxHQUFHLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUkvQyxpQkFBaUIsQ0FBQyxFQUFFLENBQUMsa0NBQWUsQ0FBQyxXQUFXLEVBQUUsVUFBQyxJQUFTO1FBQ3hELE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3hCLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3pCLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzdCLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzlCLENBQUMsQ0FBQyxDQUFDO0lBQ0gsaUJBQWlCLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUlqQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFJNUIsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFJbkMsaUJBQWlCLENBQUMsT0FBTyxFQUFFLENBQUM7SUFJNUIsaUJBQWlCLENBQUMsS0FBSyxFQUFFLENBQUM7SUFHMUIsSUFBTSxPQUFPLEdBQUcsSUFBSSxrQ0FBZSxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFFdkQsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO0lBSWYsSUFBTSxLQUFLLEdBQUcsaUJBQWlCLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzVDLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7SUFHbkIsSUFBSSxDQUFDLGNBQWMsR0FBRyxFQUFFLEtBQUssRUFBRSxpQkFBaUIsRUFBRSxDQUFDO0FBQ3ZELENBQUM7QUF6REQsd0NBeURDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPj4gb2JzZXJ2YWJsZS1hcnJheS1yZXF1aXJlLXRzXG5pbXBvcnQgeyBPYnNlcnZhYmxlQXJyYXksIENoYW5nZWREYXRhIH0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvZGF0YS9vYnNlcnZhYmxlLWFycmF5XCI7XG4vLyA8PCBvYnNlcnZhYmxlLWFycmF5LXJlcXVpcmUtdHNcblxuZXhwb3J0IGZ1bmN0aW9uIG9uTmF2aWdhdGluZ1RvKGRhdGEpIHtcbiAgICBjb25zdCBwYWdlID0gZGF0YS5vYmplY3Q7XG5cbiAgICAvLyA+PiBvYnNlcnZhYmxlLWFycmF5LWNyZWF0aW9uLXRzXG4gICAgLy8gQ3JlYXRlIE9ic2VydmFibGVBcnJheSB3aXRoIGxlbmdodFxuICAgIGxldCBteU9ic2VydmFibGVBcnJheSA9IG5ldyBPYnNlcnZhYmxlQXJyYXkoMTApO1xuXG4gICAgLy8gQ3JlYXRlIE9ic2VydmFibGVBcnJheSBmcm9tIGFycmF5LlxuICAgIGNvbnN0IGFyciA9IFswLCAxLCAxLCAyLCAzLCA1LCA4LCAxMywgMjEsIDM0XTtcbiAgICBteU9ic2VydmFibGVBcnJheSA9IG5ldyBPYnNlcnZhYmxlQXJyYXkoYXJyKTtcbiAgICAvLyBDcmVhdGUgT2JzZXJ2YWJsZUFycmF5IGZyb20gYXJndW1lbnRzLlxuICAgIG15T2JzZXJ2YWJsZUFycmF5ID0gbmV3IE9ic2VydmFibGVBcnJheSgxLCAyLCAzLCA1LCA4LCAxMywgMjEsIDMzLCA1NSwgODkpO1xuICAgIC8vIDw8IG9ic2VydmFibGUtYXJyYXktY3JlYXRpb24tdHNcblxuICAgIC8vID4+IG9ic2VydmFibGUtYXJyYXktaXRlbS1pbmRleC10c1xuICAgIGNvbnN0IGZpcnN0SXRlbSA9IG15T2JzZXJ2YWJsZUFycmF5LmdldEl0ZW0oMCk7XG4gICAgY29uc3Qgc2Vjb25kSXRlbSA9IG15T2JzZXJ2YWJsZUFycmF5LmdldEl0ZW0oMSk7XG4gICAgY29uc3QgdGhpcmRJdGVtID0gbXlPYnNlcnZhYmxlQXJyYXkuZ2V0SXRlbSgyKTtcbiAgICAvLyA8PCBvYnNlcnZhYmxlLWFycmF5LWl0ZW0taW5kZXgtdHNcblxuICAgIC8vID4+IG9ic2VydmFibGUtYXJyYXktc2V0LWl0ZW0tdHNcbiAgICBteU9ic2VydmFibGVBcnJheS5vbihPYnNlcnZhYmxlQXJyYXkuY2hhbmdlRXZlbnQsIChhcmdzOiBhbnkpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coYXJncy5pbmRleCk7IC8vIEluZGV4IG9mIHRoZSBjaGFuZ2VkIGl0ZW0gKGluIHRoaXMgY2FzZSA3KS5cbiAgICAgICAgY29uc29sZS5sb2coYXJncy5hY3Rpb24pOyAvLyBBY3Rpb24gKEluIHRoaXMgY2FzZSBcInVwZGF0ZVwiKVxuICAgICAgICBjb25zb2xlLmxvZyhhcmdzLmFkZGVkQ291bnQpOyAvLyBOdW1iZXIgb2YgYWRkZWQgaXRlbXMgKEluIHRoaXMgY2FzZSAxKS5cbiAgICAgICAgY29uc29sZS5sb2coYXJncy5yZW1vdmVkKTsgLy8gQXJyYXkgb2YgcmVtb3ZlZCBpdGVtcyAoaW4gdGhpcyBjYXNlIDMzKS5cbiAgICB9KTtcbiAgICBteU9ic2VydmFibGVBcnJheS5zZXRJdGVtKDcsIDM0KTsgLy8gYXQgc2V2ZW50aCAoNykgaW5kZXggc2V0dGluZyB2YWx1ZSBvZiAzNFxuICAgIC8vIDw8IG9ic2VydmFibGUtYXJyYXktc2V0LWl0ZW0tdHNcblxuICAgIC8vID4+IG9ic2VydmFibGUtYXJyYXktcHVzaC10c1xuICAgIG15T2JzZXJ2YWJsZUFycmF5LnB1c2goMTQ0KTtcbiAgICAvLyA8PCBvYnNlcnZhYmxlLWFycmF5LXB1c2gtdHNcblxuICAgIC8vID4+IG9ic2VydmFibGUtYXJyYXktcHVzaC1hcnJheS10c1xuICAgIG15T2JzZXJ2YWJsZUFycmF5LnB1c2goWzM3NywgMjMzXSk7XG4gICAgLy8gPDwgb2JzZXJ2YWJsZS1hcnJheS1wdXNoLWFycmF5LXRzXG5cbiAgICAvLyA+PiBvYnNlcnZhYmxlLWFycmF5LXJldmVyc2UtdHNcbiAgICBteU9ic2VydmFibGVBcnJheS5yZXZlcnNlKCk7XG4gICAgLy8gPDwgb2JzZXJ2YWJsZS1hcnJheS1yZXZlcnNlLXRzXG5cbiAgICAvLyA+PiBvYnNlcnZhYmxlLWFycmF5LXNoaWZ0LXRzXG4gICAgbXlPYnNlcnZhYmxlQXJyYXkuc2hpZnQoKTtcbiAgICAvLyA8PCBvYnNlcnZhYmxlLWFycmF5LXNoaWZ0LXRzXG5cbiAgICBjb25zdCBteUFycmF5ID0gbmV3IE9ic2VydmFibGVBcnJheShteU9ic2VydmFibGVBcnJheSk7XG4gICAgLy8gPj4gb2JzZXJ2YWJsZS1hcnJheS1zb3J0LXRzXG4gICAgbXlBcnJheS5zb3J0KCk7XG4gICAgLy8gPDwgb2JzZXJ2YWJsZS1hcnJheS1zb3J0LXRzXG5cbiAgICAvLyA+PiBvYnNlcnZhYmxlLWFycmF5LWluZGV4LW9mLXRzXG4gICAgY29uc3QgaW5kZXggPSBteU9ic2VydmFibGVBcnJheS5pbmRleE9mKDEzKTtcbiAgICBjb25zb2xlLmxvZyhpbmRleCk7XG4gICAgLy8gPDwgb2JzZXJ2YWJsZS1hcnJheS1pbmRleC1vZi10c1xuXG4gICAgcGFnZS5iaW5kaW5nQ29udGV4dCA9IHsgaXRlbXM6IG15T2JzZXJ2YWJsZUFycmF5IH07XG59XG4iXX0=