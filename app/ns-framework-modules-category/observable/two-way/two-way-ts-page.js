"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("tns-core-modules/data/observable");
var text_field_1 = require("tns-core-modules/ui/text-field");
var label_1 = require("tns-core-modules/ui/label");
function onStackLayoutLoaded(args) {
    var stackLayout = args.object;
    var observableSource = observable_1.fromObject({
        myTextSource: ""
    });
    var targetTextField = new text_field_1.TextField();
    targetTextField.marginBottom = 16;
    targetTextField.hint = "Enter text to trigger two-way binding";
    var targetLabel = new label_1.Label();
    targetLabel.textWrap = true;
    targetLabel.className = "h2";
    stackLayout.addChild(targetTextField);
    stackLayout.addChild(targetLabel);
    var textFieldBindingOptions = {
        sourceProperty: "myTextSource",
        targetProperty: "text",
        twoWay: true
    };
    targetTextField.bind(textFieldBindingOptions, observableSource);
    var labelBindingOptions = {
        sourceProperty: "myTextSource",
        targetProperty: "text",
        twoWay: false
    };
    targetLabel.bind(labelBindingOptions, observableSource);
}
exports.onStackLayoutLoaded = onStackLayoutLoaded;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHdvLXdheS10cy1wYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidHdvLXdheS10cy1wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0RBQThEO0FBQzlELDZEQUEyRDtBQUMzRCxtREFBa0Q7QUFFbEQsNkJBQW9DLElBQUk7SUFDcEMsSUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUdoQyxJQUFNLGdCQUFnQixHQUFHLHVCQUFVLENBQUM7UUFDaEMsWUFBWSxFQUFFLEVBQUU7S0FDbkIsQ0FBQyxDQUFDO0lBR0gsSUFBTSxlQUFlLEdBQUcsSUFBSSxzQkFBUyxFQUFFLENBQUM7SUFFeEMsZUFBZSxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUM7SUFDbEMsZUFBZSxDQUFDLElBQUksR0FBRyx1Q0FBdUMsQ0FBQztJQUcvRCxJQUFNLFdBQVcsR0FBRyxJQUFJLGFBQUssRUFBRSxDQUFDO0lBRWhDLFdBQVcsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO0lBQzVCLFdBQVcsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO0lBRTdCLFdBQVcsQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDdEMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUdsQyxJQUFNLHVCQUF1QixHQUFHO1FBQzVCLGNBQWMsRUFBRSxjQUFjO1FBQzlCLGNBQWMsRUFBRSxNQUFNO1FBQ3RCLE1BQU0sRUFBRSxJQUFJO0tBQ2YsQ0FBQztJQUNGLGVBQWUsQ0FBQyxJQUFJLENBQUMsdUJBQXVCLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztJQUdoRSxJQUFNLG1CQUFtQixHQUFHO1FBQ3hCLGNBQWMsRUFBRSxjQUFjO1FBQzlCLGNBQWMsRUFBRSxNQUFNO1FBQ3RCLE1BQU0sRUFBRSxLQUFLO0tBQ2hCLENBQUM7SUFDRixXQUFXLENBQUMsSUFBSSxDQUFDLG1CQUFtQixFQUFFLGdCQUFnQixDQUFDLENBQUM7QUFFNUQsQ0FBQztBQXZDRCxrREF1Q0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcm9tT2JqZWN0IH0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvZGF0YS9vYnNlcnZhYmxlXCI7XG5pbXBvcnQgeyBUZXh0RmllbGQgfSBmcm9tIFwidG5zLWNvcmUtbW9kdWxlcy91aS90ZXh0LWZpZWxkXCI7XG5pbXBvcnQgeyBMYWJlbCB9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL2xhYmVsXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBvblN0YWNrTGF5b3V0TG9hZGVkKGFyZ3MpIHtcbiAgICBjb25zdCBzdGFja0xheW91dCA9IGFyZ3Mub2JqZWN0O1xuXG4gICAgLy8gPj4gdHdvLXdheS1iaW5kaW5nLWNvZGUtdHNcbiAgICBjb25zdCBvYnNlcnZhYmxlU291cmNlID0gZnJvbU9iamVjdCh7XG4gICAgICAgIG15VGV4dFNvdXJjZTogXCJcIiAvLyBpbml0aWFsIGJpbmRpbmcgdmFsdWUgKGluIHRoaXMgY2FzZSBlbXB0eSBzdHJpbmcpXG4gICAgfSk7XG5cbiAgICAvLyBjcmVhdGUgdGhlIFRleHRGaWVsZFxuICAgIGNvbnN0IHRhcmdldFRleHRGaWVsZCA9IG5ldyBUZXh0RmllbGQoKTtcbiAgICAvLyA+PiAoaGlkZSlcbiAgICB0YXJnZXRUZXh0RmllbGQubWFyZ2luQm90dG9tID0gMTY7XG4gICAgdGFyZ2V0VGV4dEZpZWxkLmhpbnQgPSBcIkVudGVyIHRleHQgdG8gdHJpZ2dlciB0d28td2F5IGJpbmRpbmdcIjtcbiAgICAvLyA8PCAoaGlkZSlcbiAgICAvLyBjcmVhdGUgdGhlIExhYmVsXG4gICAgY29uc3QgdGFyZ2V0TGFiZWwgPSBuZXcgTGFiZWwoKTtcbiAgICAvLyA+PiAoaGlkZSlcbiAgICB0YXJnZXRMYWJlbC50ZXh0V3JhcCA9IHRydWU7XG4gICAgdGFyZ2V0TGFiZWwuY2xhc3NOYW1lID0gXCJoMlwiO1xuICAgIC8vIDw8IChoaWRlKVxuICAgIHN0YWNrTGF5b3V0LmFkZENoaWxkKHRhcmdldFRleHRGaWVsZCk7XG4gICAgc3RhY2tMYXlvdXQuYWRkQ2hpbGQodGFyZ2V0TGFiZWwpO1xuXG4gICAgLy8gYmluZGluZyB0aGUgVGV4dEZpZWxkIHdpdGggQmluZGluZ09wdGlvbnNcbiAgICBjb25zdCB0ZXh0RmllbGRCaW5kaW5nT3B0aW9ucyA9IHtcbiAgICAgICAgc291cmNlUHJvcGVydHk6IFwibXlUZXh0U291cmNlXCIsXG4gICAgICAgIHRhcmdldFByb3BlcnR5OiBcInRleHRcIixcbiAgICAgICAgdHdvV2F5OiB0cnVlXG4gICAgfTtcbiAgICB0YXJnZXRUZXh0RmllbGQuYmluZCh0ZXh0RmllbGRCaW5kaW5nT3B0aW9ucywgb2JzZXJ2YWJsZVNvdXJjZSk7XG5cbiAgICAvLyBiaW5kaW5nIHRoZSBMYWJlbCB3aXRoIEJpbmRpbmdPcHRpb25zXG4gICAgY29uc3QgbGFiZWxCaW5kaW5nT3B0aW9ucyA9IHtcbiAgICAgICAgc291cmNlUHJvcGVydHk6IFwibXlUZXh0U291cmNlXCIsXG4gICAgICAgIHRhcmdldFByb3BlcnR5OiBcInRleHRcIixcbiAgICAgICAgdHdvV2F5OiBmYWxzZSAvLyB3ZSBkb24ndCBuZWVkIHR3by13YXkgZm9yIHRoZSBMYWJlbCBhcyBpdCBjYW4gbm90IGFjY2VwdCB1c2VyIGlucHV0XG4gICAgfTtcbiAgICB0YXJnZXRMYWJlbC5iaW5kKGxhYmVsQmluZGluZ09wdGlvbnMsIG9ic2VydmFibGVTb3VyY2UpO1xuICAgIC8vIDw8IHR3by13YXktYmluZGluZy1jb2RlLXRzXG59XG4iXX0=